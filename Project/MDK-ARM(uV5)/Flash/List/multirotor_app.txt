; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\multirotor_app.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\multirotor_app.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\GPS -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Heigh -I..\..\User\Algorithm\ekf2 -IC:\__Electronic_Projects\STM32\HT_Hawk_0528_1\Project\MDK-ARM(uV5)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\multirotor_app.crf ..\..\User\Function\MultiRotor_app\MultiRotor_app.c]
                          THUMB

                          AREA ||i.Bootloader_Set||, CODE, READONLY, ALIGN=2

                  Bootloader_Set PROC
;;;41     /*====================================================================================================*/
;;;42     void Bootloader_Set(void)
000000  b508              PUSH     {r3,lr}
;;;43     {
;;;44      	u16 i;
;;;45     	
;;;46     	// 设置偏移量 
;;;47     	SCB->VTOR = FLASH_BASE | FLASH_EXCURSION ; 
000002  4806              LDR      r0,|L1.28|
000004  4906              LDR      r1,|L1.32|
000006  6008              STR      r0,[r1,#0]
;;;48     	
;;;49     	i=0x0505;
000008  f2405005          MOV      r0,#0x505
00000c  9000              STR      r0,[sp,#0]
;;;50     	STMFLASH_Write(pro_FALG_ADD,&i,1);   
00000e  2201              MOVS     r2,#1
000010  4669              MOV      r1,sp
000012  4802              LDR      r0,|L1.28|
000014  3810              SUBS     r0,r0,#0x10
000016  f7fffffe          BL       STMFLASH_Write
;;;51     }
00001a  bd08              POP      {r3,pc}
;;;52     /*====================================================================================================*/
                          ENDP

                  |L1.28|
                          DCD      0x08020000
                  |L1.32|
                          DCD      0xe000ed08

                          AREA ||i.InitBoard||, CODE, READONLY, ALIGN=2

                  InitBoard PROC
;;;60     /*====================================================================================================*/
;;;61     void InitBoard(void)
000000  b510              PUSH     {r4,lr}
;;;62     {
;;;63     	delay_init(72);
000002  2048              MOVS     r0,#0x48
000004  f7fffffe          BL       delay_init
;;;64     	Nvic_Init();
000008  f7fffffe          BL       Nvic_Init
;;;65     	
;;;66     	/* 初始化USB设备 */
;;;67       bsp_InitUsb();//暂时先启用虚拟USB，不需要可以屏蔽
00000c  f7fffffe          BL       bsp_InitUsb
;;;68     	 
;;;69     	ADC1_Init();	
000010  f7fffffe          BL       ADC1_Init
;;;70     	OLED_Init();
000014  f7fffffe          BL       OLED_Init
;;;71     	Draw_Logo();
000018  f7fffffe          BL       Draw_Logo
;;;72       OLED_Print(35,6,"恒拓科技");
00001c  a20e              ADR      r2,|L2.88|
00001e  2106              MOVS     r1,#6
000020  2023              MOVS     r0,#0x23
000022  f7fffffe          BL       OLED_Print
;;;73     	I2C_INIT();
000026  f7fffffe          BL       I2C_INIT
;;;74       LED_GPIO_Config();
00002a  f7fffffe          BL       LED_GPIO_Config
;;;75     	USART1_Config();
00002e  f7fffffe          BL       USART1_Config
;;;76     	TIM5_Config();
000032  f7fffffe          BL       TIM5_Config
;;;77     	PWM_OUT_Config();
000036  f7fffffe          BL       PWM_OUT_Config
;;;78     	PWM_IN_Config();
00003a  f7fffffe          BL       PWM_IN_Config
;;;79     	ECS_Calibrate();//电调油门行程校准
00003e  f7fffffe          BL       ECS_Calibrate
;;;80     	//NRF24L01_Init();//使用了433数传
;;;81     	Ultrasonic_Config();//US-100超声波初始化配置
000042  f7fffffe          BL       Ultrasonic_Config
;;;82      	LED_SHOW();
000046  f7fffffe          BL       LED_SHOW
;;;83       LED_BLUE_SHOW();
00004a  f7fffffe          BL       LED_BLUE_SHOW
;;;84      	FLASH_Unlock();
00004e  f7fffffe          BL       FLASH_Unlock
;;;85      	EE_Init();
000052  f7fffffe          BL       EE_Init
;;;86     }
000056  bd10              POP      {r4,pc}
;;;87     /*====================================================================================================*/
                          ENDP

                  |L2.88|
000058  bae3cdd8          DCB      186,227,205,216,191,198,188,188,0
00005c  bfc6bcbc
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0

                          AREA ||i.OLED_Display||, CODE, READONLY, ALIGN=2

                  OLED_Display PROC
;;;112    /*====================================================================================================*/
;;;113    void OLED_Display(void)
000000  b510              PUSH     {r4,lr}
;;;114    {	
;;;115    	if(flag.NrfExist==1)
000002  4828              LDR      r0,|L3.164|
000004  7880              LDRB     r0,[r0,#2]  ; flag
000006  2801              CMP      r0,#1
000008  d10a              BNE      |L3.32|
;;;116    	{
;;;117    		OLED_P6x8Str(80,1,"NRF");
00000a  a227              ADR      r2,|L3.168|
00000c  2101              MOVS     r1,#1
00000e  2050              MOVS     r0,#0x50
000010  f7fffffe          BL       OLED_P6x8Str
;;;118    		NRF24L01_Mode(MODEL_TX2);//1=RX  2=TX默认应该都是接收模式 3=RX2 4=TX2
000014  2004              MOVS     r0,#4
000016  f7fffffe          BL       NRF24L01_Mode
;;;119    		NowMode=MODEL_TX2;		
00001a  2004              MOVS     r0,#4
00001c  4923              LDR      r1,|L3.172|
00001e  7008              STRB     r0,[r1,#0]
                  |L3.32|
;;;120    	}
;;;121    	OLED_P6x8Str(0,0,VERSION_OLED);
000020  a223              ADR      r2,|L3.176|
000022  2100              MOVS     r1,#0
000024  4608              MOV      r0,r1
000026  f7fffffe          BL       OLED_P6x8Str
;;;122    	OLED_P6x8Str(70,0,MULTIROTOR);
00002a  a223              ADR      r2,|L3.184|
00002c  2100              MOVS     r1,#0
00002e  2046              MOVS     r0,#0x46
000030  f7fffffe          BL       OLED_P6x8Str
;;;123    	OLED_P6x8Str(0,1,"YAW:");
000034  a223              ADR      r2,|L3.196|
000036  2101              MOVS     r1,#1
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       OLED_P6x8Str
;;;124    	OLED_P6x8Str(0,2,"PIT:"); 
00003e  a223              ADR      r2,|L3.204|
000040  2102              MOVS     r1,#2
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       OLED_P6x8Str
;;;125    	OLED_P6x8Str(0,3,"ROL:");
000048  a222              ADR      r2,|L3.212|
00004a  2103              MOVS     r1,#3
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       OLED_P6x8Str
;;;126    	OLED_P6x8Str(0,4,"TIM:");
000052  a222              ADR      r2,|L3.220|
000054  2104              MOVS     r1,#4
000056  2000              MOVS     r0,#0
000058  f7fffffe          BL       OLED_P6x8Str
;;;127    	OLED_P6x8Str(70,3,"ULT:");
00005c  a221              ADR      r2,|L3.228|
00005e  2103              MOVS     r1,#3
000060  2046              MOVS     r0,#0x46
000062  f7fffffe          BL       OLED_P6x8Str
;;;128    	OLED_P6x8Str(56,4,"BAR:");
000066  a221              ADR      r2,|L3.236|
000068  2104              MOVS     r1,#4
00006a  2038              MOVS     r0,#0x38
00006c  f7fffffe          BL       OLED_P6x8Str
;;;129    	OLED_P6x8Str(0,5,"YAW:");
000070  a214              ADR      r2,|L3.196|
000072  2105              MOVS     r1,#5
000074  2000              MOVS     r0,#0
000076  f7fffffe          BL       OLED_P6x8Str
;;;130    	OLED_P6x8Str(0,6,"THR:");
00007a  a21e              ADR      r2,|L3.244|
00007c  2106              MOVS     r1,#6
00007e  2000              MOVS     r0,#0
000080  f7fffffe          BL       OLED_P6x8Str
;;;131    	OLED_P6x8Str(56,5,"ROLL :");
000084  a21d              ADR      r2,|L3.252|
000086  2105              MOVS     r1,#5
000088  2038              MOVS     r0,#0x38
00008a  f7fffffe          BL       OLED_P6x8Str
;;;132    	OLED_P6x8Str(56,6,"PITCH:"); 
00008e  a21d              ADR      r2,|L3.260|
000090  2106              MOVS     r1,#6
000092  2038              MOVS     r0,#0x38
000094  f7fffffe          BL       OLED_P6x8Str
;;;133    	OLED_P6x8Str(0,7,"MOTO:"); 
000098  a21c              ADR      r2,|L3.268|
00009a  2107              MOVS     r1,#7
00009c  2000              MOVS     r0,#0
00009e  f7fffffe          BL       OLED_P6x8Str
;;;134    }
0000a2  bd10              POP      {r4,pc}
;;;135    /*====================================================================================================*/
                          ENDP

                  |L3.164|
                          DCD      flag
                  |L3.168|
0000a8  4e524600          DCB      "NRF",0
                  |L3.172|
                          DCD      NowMode
                  |L3.176|
0000b0  76322e33          DCB      "v2.3.5",0
0000b4  2e3500  
0000b7  00                DCB      0
                  |L3.184|
0000b8  51554144          DCB      "QUADROTOR",0
0000bc  524f544f
0000c0  5200    
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L3.196|
0000c4  5941573a          DCB      "YAW:",0
0000c8  00      
0000c9  00                DCB      0
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L3.204|
0000cc  5049543a          DCB      "PIT:",0
0000d0  00      
0000d1  00                DCB      0
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L3.212|
0000d4  524f4c3a          DCB      "ROL:",0
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
                  |L3.220|
0000dc  54494d3a          DCB      "TIM:",0
0000e0  00      
0000e1  00                DCB      0
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L3.228|
0000e4  554c543a          DCB      "ULT:",0
0000e8  00      
0000e9  00                DCB      0
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L3.236|
0000ec  4241523a          DCB      "BAR:",0
0000f0  00      
0000f1  00                DCB      0
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L3.244|
0000f4  5448523a          DCB      "THR:",0
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L3.252|
0000fc  524f4c4c          DCB      "ROLL :",0
000100  203a00  
000103  00                DCB      0
                  |L3.260|
000104  50495443          DCB      "PITCH:",0
000108  483a00  
00010b  00                DCB      0
                  |L3.268|
00010c  4d4f544f          DCB      "MOTO:",0
000110  3a00    
000112  00                DCB      0
000113  00                DCB      0

                          AREA ||i.Screen_Update||, CODE, READONLY, ALIGN=2

                  Screen_Update PROC
;;;143    /*====================================================================================================*/
;;;144    void Screen_Update(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;145    {
;;;146    	Dis_Float(1,28,IMU.Yaw+180,1);
000002  4917              LDR      r1,|L4.96|
000004  6888              LDR      r0,[r1,#8]  ; IMU
000006  4917              LDR      r1,|L4.100|
000008  f7fffffe          BL       __aeabi_fadd
00000c  4606              MOV      r6,r0
00000e  f7fffffe          BL       __aeabi_f2d
000012  4604              MOV      r4,r0
000014  2001              MOVS     r0,#1
000016  4622              MOV      r2,r4
000018  460b              MOV      r3,r1
00001a  211c              MOVS     r1,#0x1c
00001c  9000              STR      r0,[sp,#0]
00001e  f7fffffe          BL       Dis_Float
;;;147    	Dis_Float(2,28,-IMU.Pitch,1);
000022  480f              LDR      r0,|L4.96|
000024  6800              LDR      r0,[r0,#0]  ; IMU
000026  f0804400          EOR      r4,r0,#0x80000000
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       __aeabi_f2d
000030  4605              MOV      r5,r0
000032  2001              MOVS     r0,#1
000034  462a              MOV      r2,r5
000036  460b              MOV      r3,r1
000038  211c              MOVS     r1,#0x1c
00003a  9000              STR      r0,[sp,#0]
00003c  2002              MOVS     r0,#2
00003e  f7fffffe          BL       Dis_Float
;;;148    	Dis_Float(3,28,IMU.Roll,1);
000042  4907              LDR      r1,|L4.96|
000044  6848              LDR      r0,[r1,#4]  ; IMU
000046  f7fffffe          BL       __aeabi_f2d
00004a  4604              MOV      r4,r0
00004c  2001              MOVS     r0,#1
00004e  4622              MOV      r2,r4
000050  460b              MOV      r3,r1
000052  211c              MOVS     r1,#0x1c
000054  9000              STR      r0,[sp,#0]
000056  2003              MOVS     r0,#3
000058  f7fffffe          BL       Dis_Float
;;;149    }
00005c  bdf8              POP      {r3-r7,pc}
;;;150    
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      IMU
                  |L4.100|
                          DCD      0x43340000

                          AREA ||i.Sensor_Init||, CODE, READONLY, ALIGN=2

                  Sensor_Init PROC
;;;95     /*====================================================================================================*/
;;;96     void Sensor_Init(void)
000000  b510              PUSH     {r4,lr}
;;;97     {
;;;98     	flag.MpuExist = InitMPU6050();
000002  f7fffffe          BL       InitMPU6050
000006  4909              LDR      r1,|L5.44|
000008  7008              STRB     r0,[r1,#0]
;;;99     	flag.MagExist = Init_HMC5883L();
00000a  f7fffffe          BL       Init_HMC5883L
00000e  4907              LDR      r1,|L5.44|
000010  7048              STRB     r0,[r1,#1]
;;;100      flag.NrfExist = NRF24L01_Check();
000012  f7fffffe          BL       NRF24L01_Check
000016  4905              LDR      r1,|L5.44|
000018  7088              STRB     r0,[r1,#2]
;;;101      flag.MsExist = MS5611_init();
00001a  f7fffffe          BL       MS5611_init
00001e  4903              LDR      r1,|L5.44|
000020  7108              STRB     r0,[r1,#4]
;;;102    	OLED_Fill(0x00); //清屏
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       OLED_Fill
;;;103    }
000028  bd10              POP      {r4,pc}
;;;104    /*====================================================================================================*/
                          ENDP

00002a  0000              DCW      0x0000
                  |L5.44|
                          DCD      flag

                          AREA ||i.Time_slice||, CODE, READONLY, ALIGN=2

                  Time_slice PROC
;;;269    /*====================================================================================================*/
;;;270    void Time_slice(void)
000000  482b              LDR      r0,|L6.176|
;;;271    {
;;;272      static u16 tick[6]={0,0,0,0,0,0};
;;;273    	
;;;274    	tick[0]++;tick[1]++;tick[2]++;tick[3]++;tick[4]++;tick[5]++;
000002  8800              LDRH     r0,[r0,#0]  ; tick
000004  1c40              ADDS     r0,r0,#1
000006  492a              LDR      r1,|L6.176|
000008  8008              STRH     r0,[r1,#0]
00000a  4608              MOV      r0,r1
00000c  8840              LDRH     r0,[r0,#2]  ; tick
00000e  1c40              ADDS     r0,r0,#1
000010  8048              STRH     r0,[r1,#2]
000012  4608              MOV      r0,r1
000014  8880              LDRH     r0,[r0,#4]  ; tick
000016  1c40              ADDS     r0,r0,#1
000018  8088              STRH     r0,[r1,#4]
00001a  4608              MOV      r0,r1
00001c  88c0              LDRH     r0,[r0,#6]  ; tick
00001e  1c40              ADDS     r0,r0,#1
000020  80c8              STRH     r0,[r1,#6]
000022  4608              MOV      r0,r1
000024  8900              LDRH     r0,[r0,#8]  ; tick
000026  1c40              ADDS     r0,r0,#1
000028  8108              STRH     r0,[r1,#8]
00002a  4608              MOV      r0,r1
00002c  8940              LDRH     r0,[r0,#0xa]  ; tick
00002e  1c40              ADDS     r0,r0,#1
000030  8148              STRH     r0,[r1,#0xa]
;;;275    	
;;;276    	if(tick[0]>=2){
000032  4608              MOV      r0,r1
000034  8800              LDRH     r0,[r0,#0]  ; tick
000036  2802              CMP      r0,#2
000038  db04              BLT      |L6.68|
;;;277    		tick[0] = 0;
00003a  2000              MOVS     r0,#0
00003c  8008              STRH     r0,[r1,#0]
;;;278    		flag.Loop_200Hz = 1;
00003e  2001              MOVS     r0,#1
000040  491c              LDR      r1,|L6.180|
000042  7308              STRB     r0,[r1,#0xc]
                  |L6.68|
;;;279    	}
;;;280      if(tick[1]>=4){
000044  481a              LDR      r0,|L6.176|
000046  8840              LDRH     r0,[r0,#2]  ; tick
000048  2804              CMP      r0,#4
00004a  db07              BLT      |L6.92|
;;;281    		tick[1] = 0;
00004c  2000              MOVS     r0,#0
00004e  4918              LDR      r1,|L6.176|
000050  8048              STRH     r0,[r1,#2]
;;;282    		flag.Loop_100Hz = 1;
000052  2001              MOVS     r0,#1
000054  4917              LDR      r1,|L6.180|
000056  7348              STRB     r0,[r1,#0xd]
;;;283        timetoconver=1;
000058  4917              LDR      r1,|L6.184|
00005a  7008              STRB     r0,[r1,#0]
                  |L6.92|
;;;284    	}	
;;;285    	  if(tick[2]>=10){
00005c  4814              LDR      r0,|L6.176|
00005e  8880              LDRH     r0,[r0,#4]  ; tick
000060  280a              CMP      r0,#0xa
000062  db05              BLT      |L6.112|
;;;286    		tick[2] = 0;
000064  2000              MOVS     r0,#0
000066  4912              LDR      r1,|L6.176|
000068  8088              STRH     r0,[r1,#4]
;;;287    		flag.Loop_40Hz = 1;
00006a  2001              MOVS     r0,#1
00006c  4911              LDR      r1,|L6.180|
00006e  7388              STRB     r0,[r1,#0xe]
                  |L6.112|
;;;288    	}	
;;;289    	  if(tick[3]>=15){
000070  480f              LDR      r0,|L6.176|
000072  88c0              LDRH     r0,[r0,#6]  ; tick
000074  280f              CMP      r0,#0xf
000076  db05              BLT      |L6.132|
;;;290    		tick[3] = 0;
000078  2000              MOVS     r0,#0
00007a  490d              LDR      r1,|L6.176|
00007c  80c8              STRH     r0,[r1,#6]
;;;291    		flag.Loop_27Hz = 1;
00007e  2001              MOVS     r0,#1
000080  490c              LDR      r1,|L6.180|
000082  73c8              STRB     r0,[r1,#0xf]
                  |L6.132|
;;;292    	}			
;;;293      if(tick[4] >= 40)	{
000084  480a              LDR      r0,|L6.176|
000086  8900              LDRH     r0,[r0,#8]  ; tick
000088  2828              CMP      r0,#0x28
00008a  db05              BLT      |L6.152|
;;;294    		tick[4] = 0;
00008c  2000              MOVS     r0,#0
00008e  4908              LDR      r1,|L6.176|
000090  8108              STRH     r0,[r1,#8]
;;;295    		flag.Loop_10Hz = 1;
000092  2001              MOVS     r0,#1
000094  4907              LDR      r1,|L6.180|
000096  7448              STRB     r0,[r1,#0x11]
                  |L6.152|
;;;296    	}
;;;297    	if(tick[5] >= 20)	{
000098  4805              LDR      r0,|L6.176|
00009a  8940              LDRH     r0,[r0,#0xa]  ; tick
00009c  2814              CMP      r0,#0x14
00009e  db05              BLT      |L6.172|
;;;298    	  tick[5] = 0;
0000a0  2000              MOVS     r0,#0
0000a2  4903              LDR      r1,|L6.176|
0000a4  8148              STRH     r0,[r1,#0xa]
;;;299    	  flag.Loop_20Hz = 1;
0000a6  2001              MOVS     r0,#1
0000a8  4902              LDR      r1,|L6.180|
0000aa  7408              STRB     r0,[r1,#0x10]
                  |L6.172|
;;;300      }
;;;301    }
0000ac  4770              BX       lr
;;;302    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L6.176|
                          DCD      tick
                  |L6.180|
                          DCD      flag
                  |L6.184|
                          DCD      timetoconver

                          AREA ||i.loop||, CODE, READONLY, ALIGN=2

                  loop PROC
;;;153    
;;;154    void loop(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;155    {	
;;;156    	if(flag.Loop_100Hz){
000002  4897              LDR      r0,|L7.608|
000004  7b40              LDRB     r0,[r0,#0xd]  ; flag
000006  b130              CBZ      r0,|L7.22|
;;;157    		flag.Loop_100Hz=0;
000008  2000              MOVS     r0,#0
00000a  4995              LDR      r1,|L7.608|
00000c  7348              STRB     r0,[r1,#0xd]
;;;158    	#ifdef HT_HAWK 
;;;159    		HT_GCS_Link();//使用恒拓地面站发送与接收数据	
00000e  f7fffffe          BL       HT_GCS_Link
;;;160    	#endif 	
;;;161    	#ifdef ANO 
;;;162    		ANO_DT_Data_Exchange();//使用匿名地面站发送与接收数据	
;;;163    	#endif 	
;;;164    	
;;;165    		Screen_Update();	
000012  f7fffffe          BL       Screen_Update
                  |L7.22|
;;;166    	}
;;;167    		
;;;168    	if(flag.Loop_20Hz){
000016  4892              LDR      r0,|L7.608|
000018  7c00              LDRB     r0,[r0,#0x10]  ; flag
00001a  b110              CBZ      r0,|L7.34|
;;;169    			flag.Loop_20Hz=0;
00001c  2000              MOVS     r0,#0
00001e  4990              LDR      r1,|L7.608|
000020  7408              STRB     r0,[r1,#0x10]
                  |L7.34|
;;;170    	}
;;;171    
;;;172    	if(flag.Loop_200Hz){
000022  488f              LDR      r0,|L7.608|
000024  7b00              LDRB     r0,[r0,#0xc]  ; flag
000026  b140              CBZ      r0,|L7.58|
;;;173    			flag.Loop_200Hz=0;
000028  2000              MOVS     r0,#0
00002a  498d              LDR      r1,|L7.608|
00002c  7308              STRB     r0,[r1,#0xc]
;;;174    			usart_data_RX();
00002e  f7fffffe          BL       usart_data_RX
;;;175    			UsbCmdPro();
000032  f7fffffe          BL       UsbCmdPro
;;;176    			FailSafeLEDAlarm();			
000036  f7fffffe          BL       FailSafeLEDAlarm
                  |L7.58|
;;;177    	}
;;;178    		
;;;179    	if(flag.Loop_40Hz){
00003a  4889              LDR      r0,|L7.608|
00003c  7b80              LDRB     r0,[r0,#0xe]  ; flag
00003e  b110              CBZ      r0,|L7.70|
;;;180    			flag.Loop_40Hz=0;
000040  2000              MOVS     r0,#0
000042  4987              LDR      r1,|L7.608|
000044  7388              STRB     r0,[r1,#0xe]
                  |L7.70|
;;;181    	}
;;;182    
;;;183    	if(flag.Loop_10Hz)
000046  4886              LDR      r0,|L7.608|
000048  7c40              LDRB     r0,[r0,#0x11]  ; flag
00004a  2800              CMP      r0,#0
00004c  d075              BEQ      |L7.314|
;;;184    		{
;;;185    		  flag.Loop_10Hz=0;
00004e  2000              MOVS     r0,#0
000050  4983              LDR      r1,|L7.608|
000052  7448              STRB     r0,[r1,#0x11]
;;;186    		  //if(!flag.ARMED)//如果没解锁才显示，解锁后认为要起飞，反正都不用看了，不显示以节约时间
;;;187    		  //{
;;;188    			if (flag.ARMED) OLED_P6x8Str(70,1,"ARMED   ");
000054  4608              MOV      r0,r1
000056  7940              LDRB     r0,[r0,#5]  ; flag
000058  b128              CBZ      r0,|L7.102|
00005a  a282              ADR      r2,|L7.612|
00005c  2101              MOVS     r1,#1
00005e  2046              MOVS     r0,#0x46
000060  f7fffffe          BL       OLED_P6x8Str
000064  e01a              B        |L7.156|
                  |L7.102|
;;;189    			else 
;;;190    			{			
;;;191    			  if(DISARMED_count==7) 
000066  4882              LDR      r0,|L7.624|
000068  6800              LDR      r0,[r0,#0]  ; DISARMED_count
00006a  2807              CMP      r0,#7
00006c  d105              BNE      |L7.122|
;;;192    				  OLED_P6x8Str(70,1,"DISARMED");				
00006e  a281              ADR      r2,|L7.628|
000070  2101              MOVS     r1,#1
000072  2046              MOVS     r0,#0x46
000074  f7fffffe          BL       OLED_P6x8Str
000078  e00b              B        |L7.146|
                  |L7.122|
;;;193    				else if(DISARMED_count==14)
00007a  487d              LDR      r0,|L7.624|
00007c  6800              LDR      r0,[r0,#0]  ; DISARMED_count
00007e  280e              CMP      r0,#0xe
000080  d107              BNE      |L7.146|
;;;194    				{
;;;195    					OLED_P6x8Str(70,1,"        ");
000082  a27f              ADR      r2,|L7.640|
000084  2101              MOVS     r1,#1
000086  2046              MOVS     r0,#0x46
000088  f7fffffe          BL       OLED_P6x8Str
;;;196    				  DISARMED_count=0;		
00008c  2000              MOVS     r0,#0
00008e  4978              LDR      r1,|L7.624|
000090  6008              STR      r0,[r1,#0]  ; DISARMED_count
                  |L7.146|
;;;197    				}			
;;;198    				DISARMED_count++;	
000092  4877              LDR      r0,|L7.624|
000094  6800              LDR      r0,[r0,#0]  ; DISARMED_count
000096  1c40              ADDS     r0,r0,#1
000098  4975              LDR      r1,|L7.624|
00009a  6008              STR      r0,[r1,#0]  ; DISARMED_count
                  |L7.156|
;;;199    			}
;;;200    			
;;;201    		  if(flag.calibratingA)
00009c  4870              LDR      r0,|L7.608|
00009e  79c0              LDRB     r0,[r0,#7]  ; flag
0000a0  b148              CBZ      r0,|L7.182|
;;;202    			{
;;;203    				DisTIMER;
0000a2  2100              MOVS     r1,#0
0000a4  4879              LDR      r0,|L7.652|
0000a6  f7fffffe          BL       TIM_Cmd
;;;204    				Gyro_OFFSET();		
0000aa  f7fffffe          BL       Gyro_OFFSET
;;;205    		    EnTIMER;  //开定时5时间片中断
0000ae  2101              MOVS     r1,#1
0000b0  4876              LDR      r0,|L7.652|
0000b2  f7fffffe          BL       TIM_Cmd
                  |L7.182|
;;;206    			}	
;;;207    			
;;;208    //			if (flag.MagIssue) OLED_P6x8Str(70,1,"MG:XX");
;;;209    //			else OLED_P6x8Str(70,1,"MG:OK");
;;;210    //			if (flag.calibratingM==0) OLED_P6x8Str(105,1,"0");//这几个是校准磁场计时用来看的
;;;211    //			if (flag.calibratingM==1) OLED_P6x8Str(105,1,"Z");
;;;212    //			if (flag.calibratingM==2) OLED_P6x8Str(105,1,"P");
;;;213    //			if (flag.calibratingM==3) OLED_P6x8Str(105,1,"R");
;;;214    			
;;;215    			if(RC_Data.YAW || RC_Data.THROTTLE || RC_Data.ROLL || RC_Data.PITCH){
0000b6  4876              LDR      r0,|L7.656|
0000b8  8ac0              LDRH     r0,[r0,#0x16]  ; RC_Data
0000ba  b940              CBNZ     r0,|L7.206|
0000bc  4874              LDR      r0,|L7.656|
0000be  8a80              LDRH     r0,[r0,#0x14]  ; RC_Data
0000c0  b928              CBNZ     r0,|L7.206|
0000c2  4873              LDR      r0,|L7.656|
0000c4  8a00              LDRH     r0,[r0,#0x10]  ; RC_Data
0000c6  b910              CBNZ     r0,|L7.206|
0000c8  4871              LDR      r0,|L7.656|
0000ca  8a40              LDRH     r0,[r0,#0x12]  ; RC_Data
0000cc  b1e0              CBZ      r0,|L7.264|
                  |L7.206|
;;;216    					OLED_4num(4,5,RC_Data.YAW);
0000ce  4870              LDR      r0,|L7.656|
0000d0  f9b02016          LDRSH    r2,[r0,#0x16]  ; RC_Data
0000d4  2105              MOVS     r1,#5
0000d6  2004              MOVS     r0,#4
0000d8  f7fffffe          BL       OLED_4num
;;;217    					OLED_4num(4,6,RC_Data.THROTTLE);
0000dc  486c              LDR      r0,|L7.656|
0000de  f9b02014          LDRSH    r2,[r0,#0x14]  ; RC_Data
0000e2  2106              MOVS     r1,#6
0000e4  2004              MOVS     r0,#4
0000e6  f7fffffe          BL       OLED_4num
;;;218    					OLED_4num(58,5,RC_Data.ROLL);
0000ea  4869              LDR      r0,|L7.656|
0000ec  f9b02010          LDRSH    r2,[r0,#0x10]  ; RC_Data
0000f0  2105              MOVS     r1,#5
0000f2  203a              MOVS     r0,#0x3a
0000f4  f7fffffe          BL       OLED_4num
;;;219    					OLED_4num(58,6,RC_Data.PITCH);
0000f8  4865              LDR      r0,|L7.656|
0000fa  f9b02012          LDRSH    r2,[r0,#0x12]  ; RC_Data
0000fe  2106              MOVS     r1,#6
000100  203a              MOVS     r0,#0x3a
000102  f7fffffe          BL       OLED_4num
000106  e039              B        |L7.380|
                  |L7.264|
;;;220    			}
;;;221    			else 
;;;222    			{			
;;;223    			  if(RC_count==7) 
000108  4862              LDR      r0,|L7.660|
00010a  6800              LDR      r0,[r0,#0]  ; RC_count
00010c  2807              CMP      r0,#7
00010e  d115              BNE      |L7.316|
;;;224    				{
;;;225    					OLED_P6x8Str(26,5,"NO"); 
000110  a261              ADR      r2,|L7.664|
000112  2105              MOVS     r1,#5
000114  201a              MOVS     r0,#0x1a
000116  f7fffffe          BL       OLED_P6x8Str
;;;226    	        OLED_P6x8Str(26,6,"NO"); 
00011a  a25f              ADR      r2,|L7.664|
00011c  2106              MOVS     r1,#6
00011e  201a              MOVS     r0,#0x1a
000120  f7fffffe          BL       OLED_P6x8Str
;;;227    	        OLED_P6x8Str(94,5,"NO"); 
000124  a25c              ADR      r2,|L7.664|
000126  2105              MOVS     r1,#5
000128  205e              MOVS     r0,#0x5e
00012a  f7fffffe          BL       OLED_P6x8Str
;;;228    	        OLED_P6x8Str(94,6,"NO");						
00012e  a25a              ADR      r2,|L7.664|
000130  2106              MOVS     r1,#6
000132  205e              MOVS     r0,#0x5e
000134  f7fffffe          BL       OLED_P6x8Str
000138  e01b              B        |L7.370|
                  |L7.314|
00013a  e08f              B        |L7.604|
                  |L7.316|
;;;229    				}	
;;;230    				else if(RC_count==14)
00013c  4855              LDR      r0,|L7.660|
00013e  6800              LDR      r0,[r0,#0]  ; RC_count
000140  280e              CMP      r0,#0xe
000142  d116              BNE      |L7.370|
;;;231    				{
;;;232    					OLED_P6x8Str(26,5,"  "); 
000144  a255              ADR      r2,|L7.668|
000146  2105              MOVS     r1,#5
000148  201a              MOVS     r0,#0x1a
00014a  f7fffffe          BL       OLED_P6x8Str
;;;233    	        OLED_P6x8Str(26,6,"  "); 
00014e  a253              ADR      r2,|L7.668|
000150  2106              MOVS     r1,#6
000152  201a              MOVS     r0,#0x1a
000154  f7fffffe          BL       OLED_P6x8Str
;;;234    	        OLED_P6x8Str(94,5,"  "); 
000158  a250              ADR      r2,|L7.668|
00015a  2105              MOVS     r1,#5
00015c  205e              MOVS     r0,#0x5e
00015e  f7fffffe          BL       OLED_P6x8Str
;;;235    	        OLED_P6x8Str(94,6,"  ");
000162  a24e              ADR      r2,|L7.668|
000164  2106              MOVS     r1,#6
000166  205e              MOVS     r0,#0x5e
000168  f7fffffe          BL       OLED_P6x8Str
;;;236    				  RC_count=0;		
00016c  2000              MOVS     r0,#0
00016e  4949              LDR      r1,|L7.660|
000170  6008              STR      r0,[r1,#0]  ; RC_count
                  |L7.370|
;;;237    				}			
;;;238    				RC_count++;	
000172  4848              LDR      r0,|L7.660|
000174  6800              LDR      r0,[r0,#0]  ; RC_count
000176  1c40              ADDS     r0,r0,#1
000178  4946              LDR      r1,|L7.660|
00017a  6008              STR      r0,[r1,#0]  ; RC_count
                  |L7.380|
;;;239    			}
;;;240    			
;;;241    			OLED_3num(5,7,Moto_duty[0]);
00017c  4848              LDR      r0,|L7.672|
00017e  8802              LDRH     r2,[r0,#0]  ; Moto_duty
000180  2107              MOVS     r1,#7
000182  2005              MOVS     r0,#5
000184  f7fffffe          BL       OLED_3num
;;;242    			OLED_3num(9,7,Moto_duty[1]);
000188  4845              LDR      r0,|L7.672|
00018a  8842              LDRH     r2,[r0,#2]  ; Moto_duty
00018c  2107              MOVS     r1,#7
00018e  2009              MOVS     r0,#9
000190  f7fffffe          BL       OLED_3num
;;;243    			OLED_3num(13,7,Moto_duty[2]);
000194  4842              LDR      r0,|L7.672|
000196  8882              LDRH     r2,[r0,#4]  ; Moto_duty
000198  2107              MOVS     r1,#7
00019a  200d              MOVS     r0,#0xd
00019c  f7fffffe          BL       OLED_3num
;;;244    			OLED_3num(17,7,Moto_duty[3]);
0001a0  483f              LDR      r0,|L7.672|
0001a2  88c2              LDRH     r2,[r0,#6]  ; Moto_duty
0001a4  2107              MOVS     r1,#7
0001a6  2011              MOVS     r0,#0x11
0001a8  f7fffffe          BL       OLED_3num
;;;245    			
;;;246    			if(flag.FlightMode==MANUAL_High)
0001ac  482c              LDR      r0,|L7.608|
0001ae  7cc0              LDRB     r0,[r0,#0x13]  ; flag
0001b0  2801              CMP      r0,#1
0001b2  d105              BNE      |L7.448|
;;;247    				OLED_P6x8Str(70,2,"Stabilize");
0001b4  a23b              ADR      r2,|L7.676|
0001b6  2102              MOVS     r1,#2
0001b8  2046              MOVS     r0,#0x46
0001ba  f7fffffe          BL       OLED_P6x8Str
0001be  e012              B        |L7.486|
                  |L7.448|
;;;248    			else if(flag.FlightMode==ULTRASONIC_High)
0001c0  4827              LDR      r0,|L7.608|
0001c2  7cc0              LDRB     r0,[r0,#0x13]  ; flag
0001c4  2802              CMP      r0,#2
0001c6  d105              BNE      |L7.468|
;;;249    				OLED_P6x8Str(70,2,"U-ALTHOLD");
0001c8  a239              ADR      r2,|L7.688|
0001ca  2102              MOVS     r1,#2
0001cc  2046              MOVS     r0,#0x46
0001ce  f7fffffe          BL       OLED_P6x8Str
0001d2  e008              B        |L7.486|
                  |L7.468|
;;;250    			else if(flag.FlightMode==ATMOSPHERE_High)
0001d4  4822              LDR      r0,|L7.608|
0001d6  7cc0              LDRB     r0,[r0,#0x13]  ; flag
0001d8  2803              CMP      r0,#3
0001da  d104              BNE      |L7.486|
;;;251    				OLED_P6x8Str(70,2,"B-ALTHOLD");
0001dc  a237              ADR      r2,|L7.700|
0001de  2102              MOVS     r1,#2
0001e0  2046              MOVS     r0,#0x46
0001e2  f7fffffe          BL       OLED_P6x8Str
                  |L7.486|
;;;252    			
;;;253    			Dis_Float(4,30,(float)testtime/1000,1);
0001e6  4838              LDR      r0,|L7.712|
0001e8  8800              LDRH     r0,[r0,#0]  ; testtime
0001ea  f7fffffe          BL       __aeabi_ui2f
0001ee  4607              MOV      r7,r0
0001f0  4936              LDR      r1,|L7.716|
0001f2  f7fffffe          BL       __aeabi_fdiv
0001f6  4604              MOV      r4,r0
0001f8  f7fffffe          BL       __aeabi_f2d
0001fc  4605              MOV      r5,r0
0001fe  2001              MOVS     r0,#1
000200  462a              MOV      r2,r5
000202  460b              MOV      r3,r1
000204  211e              MOVS     r1,#0x1e
000206  9000              STR      r0,[sp,#0]
000208  2004              MOVS     r0,#4
00020a  f7fffffe          BL       Dis_Float
;;;254    			Dis_Float(4,80,(float)Pressure/1000,3);
00020e  4830              LDR      r0,|L7.720|
000210  6800              LDR      r0,[r0,#0]  ; Pressure
000212  f7fffffe          BL       __aeabi_ui2f
000216  4607              MOV      r7,r0
000218  492c              LDR      r1,|L7.716|
00021a  f7fffffe          BL       __aeabi_fdiv
00021e  4604              MOV      r4,r0
000220  f7fffffe          BL       __aeabi_f2d
000224  4605              MOV      r5,r0
000226  2003              MOVS     r0,#3
000228  462a              MOV      r2,r5
00022a  460b              MOV      r3,r1
00022c  2150              MOVS     r1,#0x50
00022e  9000              STR      r0,[sp,#0]
000230  2004              MOVS     r0,#4
000232  f7fffffe          BL       Dis_Float
;;;255    			Dis_Float(3,94,ultra_dis_lpf/1000,2);
000236  4925              LDR      r1,|L7.716|
000238  4826              LDR      r0,|L7.724|
00023a  6800              LDR      r0,[r0,#0]  ; ultra_dis_lpf
00023c  f7fffffe          BL       __aeabi_fdiv
000240  4606              MOV      r6,r0
000242  f7fffffe          BL       __aeabi_f2d
000246  4604              MOV      r4,r0
000248  2002              MOVS     r0,#2
00024a  4622              MOV      r2,r4
00024c  460b              MOV      r3,r1
00024e  215e              MOVS     r1,#0x5e
000250  9000              STR      r0,[sp,#0]
000252  2003              MOVS     r0,#3
000254  f7fffffe          BL       Dis_Float
;;;256    			EE_SAVE_Attitude_PID();		
000258  f7fffffe          BL       EE_SAVE_Attitude_PID
                  |L7.604|
;;;257    			//}
;;;258    		}
;;;259    }
00025c  bdf8              POP      {r3-r7,pc}
;;;260    
                          ENDP

00025e  0000              DCW      0x0000
                  |L7.608|
                          DCD      flag
                  |L7.612|
000264  41524d45          DCB      "ARMED   ",0
000268  44202020
00026c  00      
00026d  00                DCB      0
00026e  00                DCB      0
00026f  00                DCB      0
                  |L7.624|
                          DCD      DISARMED_count
                  |L7.628|
000274  44495341          DCB      "DISARMED",0
000278  524d4544
00027c  00      
00027d  00                DCB      0
00027e  00                DCB      0
00027f  00                DCB      0
                  |L7.640|
000280  20202020          DCB      "        ",0
000284  20202020
000288  00      
000289  00                DCB      0
00028a  00                DCB      0
00028b  00                DCB      0
                  |L7.652|
                          DCD      0x40000c00
                  |L7.656|
                          DCD      RC_Data
                  |L7.660|
                          DCD      RC_count
                  |L7.664|
000298  4e4f00            DCB      "NO",0
00029b  00                DCB      0
                  |L7.668|
00029c  202000            DCB      "  ",0
00029f  00                DCB      0
                  |L7.672|
                          DCD      Moto_duty
                  |L7.676|
0002a4  53746162          DCB      "Stabilize",0
0002a8  696c697a
0002ac  6500    
0002ae  00                DCB      0
0002af  00                DCB      0
                  |L7.688|
0002b0  552d414c          DCB      "U-ALTHOLD",0
0002b4  54484f4c
0002b8  4400    
0002ba  00                DCB      0
0002bb  00                DCB      0
                  |L7.700|
0002bc  422d414c          DCB      "B-ALTHOLD",0
0002c0  54484f4c
0002c4  4400    
0002c6  00                DCB      0
0002c7  00                DCB      0
                  |L7.712|
                          DCD      testtime
                  |L7.716|
                          DCD      0x447a0000
                  |L7.720|
                          DCD      Pressure
                  |L7.724|
                          DCD      ultra_dis_lpf

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  RXBUF
                          %        32
                  flag
                          %        24
                  Kalman_Data
                          %        16
                  tick
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  Battery_Voltage
                          DCD      0x00000000
                  NRFRXOK
000004  00                DCB      0x00
                  RXstate
000005  00                DCB      0x00
                  tempnum
000006  0000              DCB      0x00,0x00
                  testT
                          DCD      0x00000000
                  testT_old
                          DCD      0x00000000
                  DISARMED_count
                          DCD      0x00000000
                  RC_count
                          DCD      0x00000000
