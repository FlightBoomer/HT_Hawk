; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usb_int.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_int.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\GPS -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Heigh -IC:\__Electronic_Projects\STM32\HT_Hawk_0528_1\Project\MDK-ARM(uV5)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\usb_int.crf ..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_int.c]
                          THUMB

                          AREA ||i.CTR_HP||, CODE, READONLY, ALIGN=2

                  CTR_HP PROC
;;;160    *******************************************************************************/
;;;161    void CTR_HP(void)
000000  b510              PUSH     {r4,lr}
;;;162    {
;;;163      uint32_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;164    
;;;165      while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e049              B        |L1.154|
                  |L1.6|
;;;166      {
;;;167        _SetISTR((uint16_t)CLR_CTR); /* clear CTR flag */
000006  f64770ff          MOV      r0,#0x7fff
00000a  4929              LDR      r1,|L1.176|
00000c  6008              STR      r0,[r1,#0]
;;;168        /* extract highest priority endpoint number */
;;;169        EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
00000e  4829              LDR      r0,|L1.180|
000010  8800              LDRH     r0,[r0,#0]  ; wIstr
000012  f000000f          AND      r0,r0,#0xf
000016  4928              LDR      r1,|L1.184|
000018  7008              STRB     r0,[r1,#0]
;;;170        /* process related endpoint register */
;;;171        wEPVal = _GetENDPOINT(EPindex);
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]  ; EPindex
00001e  4927              LDR      r1,|L1.188|
000020  eb010080          ADD      r0,r1,r0,LSL #2
000024  f8d00c00          LDR      r0,[r0,#0xc00]
000028  b284              UXTH     r4,r0
;;;172        if ((wEPVal & EP_CTR_RX) != 0)
00002a  f4044000          AND      r0,r4,#0x8000
00002e  b1c8              CBZ      r0,|L1.100|
;;;173        {
;;;174          /* clear int flag */
;;;175          _ClearEP_CTR_RX(EPindex);
000030  4821              LDR      r0,|L1.184|
000032  7800              LDRB     r0,[r0,#0]  ; EPindex
000034  eb010080          ADD      r0,r1,r0,LSL #2
000038  f8d00c00          LDR      r0,[r0,#0xc00]
00003c  f3c0000e          UBFX     r0,r0,#0,#15
000040  f648718f          MOV      r1,#0x8f8f
000044  4008              ANDS     r0,r0,r1
000046  491c              LDR      r1,|L1.184|
000048  7809              LDRB     r1,[r1,#0]  ; EPindex
00004a  4a1c              LDR      r2,|L1.188|
00004c  eb020181          ADD      r1,r2,r1,LSL #2
000050  f8c10c00          STR      r0,[r1,#0xc00]
;;;176    
;;;177          /* call OUT service function */
;;;178          (*pEpInt_OUT[EPindex-1])();
000054  4918              LDR      r1,|L1.184|
000056  7809              LDRB     r1,[r1,#0]  ; EPindex
000058  1e49              SUBS     r1,r1,#1
00005a  4a19              LDR      r2,|L1.192|
00005c  f8520021          LDR      r0,[r2,r1,LSL #2]
000060  4780              BLX      r0
000062  e01a              B        |L1.154|
                  |L1.100|
;;;179    
;;;180        } /* if((wEPVal & EP_CTR_RX) */
;;;181        else if ((wEPVal & EP_CTR_TX) != 0)
000064  f0040080          AND      r0,r4,#0x80
000068  b1b8              CBZ      r0,|L1.154|
;;;182        {
;;;183          /* clear int flag */
;;;184          _ClearEP_CTR_TX(EPindex);
00006a  4813              LDR      r0,|L1.184|
00006c  7800              LDRB     r0,[r0,#0]  ; EPindex
00006e  4913              LDR      r1,|L1.188|
000070  eb010080          ADD      r0,r1,r0,LSL #2
000074  f8d00c00          LDR      r0,[r0,#0xc00]
000078  f648710f          MOV      r1,#0x8f0f
00007c  4008              ANDS     r0,r0,r1
00007e  490e              LDR      r1,|L1.184|
000080  7809              LDRB     r1,[r1,#0]  ; EPindex
000082  4a0e              LDR      r2,|L1.188|
000084  eb020181          ADD      r1,r2,r1,LSL #2
000088  f8c10c00          STR      r0,[r1,#0xc00]
;;;185    
;;;186          /* call IN service function */
;;;187          (*pEpInt_IN[EPindex-1])();
00008c  490a              LDR      r1,|L1.184|
00008e  7809              LDRB     r1,[r1,#0]  ; EPindex
000090  1e49              SUBS     r1,r1,#1
000092  4a0c              LDR      r2,|L1.196|
000094  f8520021          LDR      r0,[r2,r1,LSL #2]
000098  4780              BLX      r0
                  |L1.154|
00009a  4805              LDR      r0,|L1.176|
00009c  6800              LDR      r0,[r0,#0]            ;165
00009e  b280              UXTH     r0,r0                 ;165
0000a0  4904              LDR      r1,|L1.180|
0000a2  8008              STRH     r0,[r1,#0]            ;165
0000a4  f4004000          AND      r0,r0,#0x8000         ;165
0000a8  2800              CMP      r0,#0                 ;165
0000aa  d1ac              BNE      |L1.6|
;;;188    
;;;189    
;;;190        } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;191    
;;;192      }/* while(...) */
;;;193    }
0000ac  bd10              POP      {r4,pc}
;;;194    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40005c44
                  |L1.180|
                          DCD      wIstr
                  |L1.184|
                          DCD      EPindex
                  |L1.188|
                          DCD      0x40005000
                  |L1.192|
                          DCD      pEpInt_OUT
                  |L1.196|
                          DCD      pEpInt_IN

                          AREA ||i.CTR_LP||, CODE, READONLY, ALIGN=2

                  CTR_LP PROC
;;;52     *******************************************************************************/
;;;53     void CTR_LP(void)
000000  b508              PUSH     {r3,lr}
;;;54     {
;;;55       __IO uint16_t wEPVal = 0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;56       /* stay in loop while pending interrupts */
;;;57       while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000006  e122              B        |L2.590|
                  |L2.8|
;;;58       {
;;;59         /* extract highest priority endpoint number */
;;;60         EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
000008  4897              LDR      r0,|L2.616|
00000a  8800              LDRH     r0,[r0,#0]  ; wIstr
00000c  f000000f          AND      r0,r0,#0xf
000010  4996              LDR      r1,|L2.620|
000012  7008              STRB     r0,[r1,#0]
;;;61         if (EPindex == 0)
000014  4608              MOV      r0,r1
000016  7800              LDRB     r0,[r0,#0]  ; EPindex
000018  2800              CMP      r0,#0
00001a  d17c              BNE      |L2.278|
;;;62         {
;;;63           /* Decode and service control endpoint interrupt */
;;;64           /* calling related service routine */
;;;65           /* (Setup0_Process, In0_Process, Out0_Process) */
;;;66     
;;;67           /* save RX & TX status */
;;;68           /* and set both to NAK */
;;;69           
;;;70     	    SaveRState = _GetENDPOINT(ENDP0);
00001c  4894              LDR      r0,|L2.624|
00001e  6800              LDR      r0,[r0,#0]
000020  4994              LDR      r1,|L2.628|
000022  8008              STRH     r0,[r1,#0]
;;;71     	    SaveTState = SaveRState & EPTX_STAT;
000024  4608              MOV      r0,r1
000026  8800              LDRH     r0,[r0,#0]  ; SaveRState
000028  f0000030          AND      r0,r0,#0x30
00002c  4992              LDR      r1,|L2.632|
00002e  8008              STRH     r0,[r1,#0]
;;;72     	    SaveRState &=  EPRX_STAT;	
000030  4890              LDR      r0,|L2.628|
000032  8800              LDRH     r0,[r0,#0]  ; SaveRState
000034  f4005040          AND      r0,r0,#0x3000
000038  498e              LDR      r1,|L2.628|
00003a  8008              STRH     r0,[r1,#0]
;;;73     
;;;74     	    _SetEPRxTxStatus(ENDP0,EP_RX_NAK,EP_TX_NAK);
00003c  498c              LDR      r1,|L2.624|
00003e  6809              LDR      r1,[r1,#0]
000040  f64b72bf          MOV      r2,#0xbfbf
000044  ea010002          AND      r0,r1,r2
000048  f4805000          EOR      r0,r0,#0x2000
00004c  f0800020          EOR      r0,r0,#0x20
000050  f4404100          ORR      r1,r0,#0x8000
000054  f0410180          ORR      r1,r1,#0x80
000058  4a85              LDR      r2,|L2.624|
00005a  6011              STR      r1,[r2,#0]
;;;75     
;;;76           /* DIR bit = origin of the interrupt */
;;;77     
;;;78           if ((wIstr & ISTR_DIR) == 0)
00005c  4882              LDR      r0,|L2.616|
00005e  8800              LDRH     r0,[r0,#0]  ; wIstr
000060  f0000010          AND      r0,r0,#0x10
000064  bb90              CBNZ     r0,|L2.204|
;;;79           {
;;;80             /* DIR = 0 */
;;;81     
;;;82             /* DIR = 0      => IN  int */
;;;83             /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
;;;84     
;;;85             _ClearEP_CTR_TX(ENDP0);
000066  4610              MOV      r0,r2
000068  6800              LDR      r0,[r0,#0]
00006a  f648710f          MOV      r1,#0x8f0f
00006e  4008              ANDS     r0,r0,r1
000070  4611              MOV      r1,r2
000072  6008              STR      r0,[r1,#0]
;;;86             In0_Process();
000074  f7fffffe          BL       In0_Process
;;;87     
;;;88                /* before terminate set Tx & Rx status */
;;;89     
;;;90                 _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
000078  497d              LDR      r1,|L2.624|
00007a  6809              LDR      r1,[r1,#0]
00007c  f64b72bf          MOV      r2,#0xbfbf
000080  ea010002          AND      r0,r1,r2
000084  497b              LDR      r1,|L2.628|
000086  8809              LDRH     r1,[r1,#0]  ; SaveRState
000088  f4015180          AND      r1,r1,#0x1000
00008c  b109              CBZ      r1,|L2.146|
00008e  f4805080          EOR      r0,r0,#0x1000
                  |L2.146|
000092  4978              LDR      r1,|L2.628|
000094  8809              LDRH     r1,[r1,#0]  ; SaveRState
000096  f4015100          AND      r1,r1,#0x2000
00009a  b109              CBZ      r1,|L2.160|
00009c  f4805000          EOR      r0,r0,#0x2000
                  |L2.160|
0000a0  4975              LDR      r1,|L2.632|
0000a2  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000a4  f0010110          AND      r1,r1,#0x10
0000a8  b109              CBZ      r1,|L2.174|
0000aa  f0800010          EOR      r0,r0,#0x10
                  |L2.174|
0000ae  4972              LDR      r1,|L2.632|
0000b0  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000b2  f0010120          AND      r1,r1,#0x20
0000b6  b109              CBZ      r1,|L2.188|
0000b8  f0800020          EOR      r0,r0,#0x20
                  |L2.188|
0000bc  b281              UXTH     r1,r0
0000be  f4414100          ORR      r1,r1,#0x8000
0000c2  f0410180          ORR      r1,r1,#0x80
0000c6  4a6a              LDR      r2,|L2.624|
0000c8  6011              STR      r1,[r2,#0]
                  |L2.202|
;;;91     		  return;
;;;92           }
;;;93           else
;;;94           {
;;;95             /* DIR = 1 */
;;;96     
;;;97             /* DIR = 1 & CTR_RX       => SETUP or OUT int */
;;;98             /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
;;;99     
;;;100            wEPVal = _GetENDPOINT(ENDP0);
;;;101            
;;;102            if ((wEPVal &EP_SETUP) != 0)
;;;103            {
;;;104              _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
;;;105              Setup0_Process();
;;;106              /* before terminate set Tx & Rx status */
;;;107    
;;;108    		      _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
;;;109              return;
;;;110            }
;;;111    
;;;112            else if ((wEPVal & EP_CTR_RX) != 0)
;;;113            {
;;;114              _ClearEP_CTR_RX(ENDP0);
;;;115              Out0_Process();
;;;116              /* before terminate set Tx & Rx status */
;;;117         
;;;118    		     _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
;;;119              return;
;;;120            }
;;;121          }
;;;122        }/* if(EPindex == 0) */
;;;123        else
;;;124        {
;;;125          /* Decode and service non control endpoints interrupt  */
;;;126    
;;;127          /* process related endpoint register */
;;;128          wEPVal = _GetENDPOINT(EPindex);
;;;129          if ((wEPVal & EP_CTR_RX) != 0)
;;;130          {
;;;131            /* clear int flag */
;;;132            _ClearEP_CTR_RX(EPindex);
;;;133    
;;;134            /* call OUT service function */
;;;135            (*pEpInt_OUT[EPindex-1])();
;;;136    
;;;137          } /* if((wEPVal & EP_CTR_RX) */
;;;138    
;;;139          if ((wEPVal & EP_CTR_TX) != 0)
;;;140          {
;;;141            /* clear int flag */
;;;142            _ClearEP_CTR_TX(EPindex);
;;;143    
;;;144            /* call IN service function */
;;;145            (*pEpInt_IN[EPindex-1])();
;;;146          } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;147    
;;;148        }/* if(EPindex == 0) else */
;;;149    
;;;150      }/* while(...) */
;;;151    }
0000ca  bd08              POP      {r3,pc}
                  |L2.204|
0000cc  e7ff              B        |L2.206|
                  |L2.206|
0000ce  4868              LDR      r0,|L2.624|
0000d0  6800              LDR      r0,[r0,#0]            ;100
0000d2  b280              UXTH     r0,r0                 ;100
0000d4  9000              STR      r0,[sp,#0]            ;100
0000d6  f8bd0000          LDRH     r0,[sp,#0]            ;102
0000da  f4006000          AND      r0,r0,#0x800          ;102
0000de  b3b0              CBZ      r0,|L2.334|
0000e0  4863              LDR      r0,|L2.624|
0000e2  6800              LDR      r0,[r0,#0]            ;104
0000e4  f3c0000e          UBFX     r0,r0,#0,#15          ;104
0000e8  f648718f          MOV      r1,#0x8f8f            ;104
0000ec  4008              ANDS     r0,r0,r1              ;104
0000ee  4960              LDR      r1,|L2.624|
0000f0  6008              STR      r0,[r1,#0]            ;104
0000f2  f7fffffe          BL       Setup0_Process
0000f6  495e              LDR      r1,|L2.624|
0000f8  6809              LDR      r1,[r1,#0]            ;108
0000fa  f64b72bf          MOV      r2,#0xbfbf            ;108
0000fe  ea010002          AND      r0,r1,r2              ;108
000102  495c              LDR      r1,|L2.628|
000104  8809              LDRH     r1,[r1,#0]            ;108  ; SaveRState
000106  f4015180          AND      r1,r1,#0x1000         ;108
00010a  b109              CBZ      r1,|L2.272|
00010c  f4805080          EOR      r0,r0,#0x1000         ;108
                  |L2.272|
000110  4958              LDR      r1,|L2.628|
000112  8809              LDRH     r1,[r1,#0]            ;108  ; SaveRState
000114  e000              B        |L2.280|
                  |L2.278|
000116  e056              B        |L2.454|
                  |L2.280|
000118  f4015100          AND      r1,r1,#0x2000         ;108
00011c  b109              CBZ      r1,|L2.290|
00011e  f4805000          EOR      r0,r0,#0x2000         ;108
                  |L2.290|
000122  4955              LDR      r1,|L2.632|
000124  8809              LDRH     r1,[r1,#0]            ;108  ; SaveTState
000126  f0010110          AND      r1,r1,#0x10           ;108
00012a  b109              CBZ      r1,|L2.304|
00012c  f0800010          EOR      r0,r0,#0x10           ;108
                  |L2.304|
000130  4951              LDR      r1,|L2.632|
000132  8809              LDRH     r1,[r1,#0]            ;108  ; SaveTState
000134  f0010120          AND      r1,r1,#0x20           ;108
000138  b109              CBZ      r1,|L2.318|
00013a  f0800020          EOR      r0,r0,#0x20           ;108
                  |L2.318|
00013e  b281              UXTH     r1,r0                 ;108
000140  f4414100          ORR      r1,r1,#0x8000         ;108
000144  f0410180          ORR      r1,r1,#0x80           ;108
000148  4a49              LDR      r2,|L2.624|
00014a  6011              STR      r1,[r2,#0]            ;108
00014c  e7bd              B        |L2.202|
                  |L2.334|
00014e  e7ff              B        |L2.336|
                  |L2.336|
000150  f8bd0000          LDRH     r0,[sp,#0]            ;112
000154  f4004000          AND      r0,r0,#0x8000         ;112
000158  2800              CMP      r0,#0                 ;112
00015a  d078              BEQ      |L2.590|
00015c  4844              LDR      r0,|L2.624|
00015e  6800              LDR      r0,[r0,#0]            ;114
000160  f3c0000e          UBFX     r0,r0,#0,#15          ;114
000164  f648718f          MOV      r1,#0x8f8f            ;114
000168  4008              ANDS     r0,r0,r1              ;114
00016a  4941              LDR      r1,|L2.624|
00016c  6008              STR      r0,[r1,#0]            ;114
00016e  f7fffffe          BL       Out0_Process
000172  493f              LDR      r1,|L2.624|
000174  6809              LDR      r1,[r1,#0]            ;118
000176  f64b72bf          MOV      r2,#0xbfbf            ;118
00017a  ea010002          AND      r0,r1,r2              ;118
00017e  493d              LDR      r1,|L2.628|
000180  8809              LDRH     r1,[r1,#0]            ;118  ; SaveRState
000182  f4015180          AND      r1,r1,#0x1000         ;118
000186  b109              CBZ      r1,|L2.396|
000188  f4805080          EOR      r0,r0,#0x1000         ;118
                  |L2.396|
00018c  4939              LDR      r1,|L2.628|
00018e  8809              LDRH     r1,[r1,#0]            ;118  ; SaveRState
000190  f4015100          AND      r1,r1,#0x2000         ;118
000194  b109              CBZ      r1,|L2.410|
000196  f4805000          EOR      r0,r0,#0x2000         ;118
                  |L2.410|
00019a  4937              LDR      r1,|L2.632|
00019c  8809              LDRH     r1,[r1,#0]            ;118  ; SaveTState
00019e  f0010110          AND      r1,r1,#0x10           ;118
0001a2  b109              CBZ      r1,|L2.424|
0001a4  f0800010          EOR      r0,r0,#0x10           ;118
                  |L2.424|
0001a8  4933              LDR      r1,|L2.632|
0001aa  8809              LDRH     r1,[r1,#0]            ;118  ; SaveTState
0001ac  f0010120          AND      r1,r1,#0x20           ;118
0001b0  b109              CBZ      r1,|L2.438|
0001b2  f0800020          EOR      r0,r0,#0x20           ;118
                  |L2.438|
0001b6  b281              UXTH     r1,r0                 ;118
0001b8  f4414100          ORR      r1,r1,#0x8000         ;118
0001bc  f0410180          ORR      r1,r1,#0x80           ;118
0001c0  4a2b              LDR      r2,|L2.624|
0001c2  6011              STR      r1,[r2,#0]            ;118
0001c4  e781              B        |L2.202|
                  |L2.454|
0001c6  4829              LDR      r0,|L2.620|
0001c8  7800              LDRB     r0,[r0,#0]            ;128  ; EPindex
0001ca  492c              LDR      r1,|L2.636|
0001cc  eb010080          ADD      r0,r1,r0,LSL #2       ;128
0001d0  f8d00c00          LDR      r0,[r0,#0xc00]        ;128
0001d4  b280              UXTH     r0,r0                 ;128
0001d6  9000              STR      r0,[sp,#0]            ;128
0001d8  f8bd0000          LDRH     r0,[sp,#0]            ;129
0001dc  f4004000          AND      r0,r0,#0x8000         ;129
0001e0  b1c0              CBZ      r0,|L2.532|
0001e2  4822              LDR      r0,|L2.620|
0001e4  7800              LDRB     r0,[r0,#0]            ;132  ; EPindex
0001e6  eb010080          ADD      r0,r1,r0,LSL #2       ;132
0001ea  f8d00c00          LDR      r0,[r0,#0xc00]        ;132
0001ee  f3c0000e          UBFX     r0,r0,#0,#15          ;132
0001f2  f648718f          MOV      r1,#0x8f8f            ;132
0001f6  4008              ANDS     r0,r0,r1              ;132
0001f8  491c              LDR      r1,|L2.620|
0001fa  7809              LDRB     r1,[r1,#0]            ;132  ; EPindex
0001fc  4a1f              LDR      r2,|L2.636|
0001fe  eb020181          ADD      r1,r2,r1,LSL #2       ;132
000202  f8c10c00          STR      r0,[r1,#0xc00]        ;132
000206  4919              LDR      r1,|L2.620|
000208  7809              LDRB     r1,[r1,#0]            ;135  ; EPindex
00020a  1e49              SUBS     r1,r1,#1              ;135
00020c  4a1c              LDR      r2,|L2.640|
00020e  f8520021          LDR      r0,[r2,r1,LSL #2]     ;135
000212  4780              BLX      r0                    ;135
                  |L2.532|
000214  f8bd0000          LDRH     r0,[sp,#0]            ;139
000218  f0000080          AND      r0,r0,#0x80           ;139
00021c  b1b8              CBZ      r0,|L2.590|
00021e  4813              LDR      r0,|L2.620|
000220  7800              LDRB     r0,[r0,#0]            ;142  ; EPindex
000222  4916              LDR      r1,|L2.636|
000224  eb010080          ADD      r0,r1,r0,LSL #2       ;142
000228  f8d00c00          LDR      r0,[r0,#0xc00]        ;142
00022c  f648710f          MOV      r1,#0x8f0f            ;142
000230  4008              ANDS     r0,r0,r1              ;142
000232  490e              LDR      r1,|L2.620|
000234  7809              LDRB     r1,[r1,#0]            ;142  ; EPindex
000236  4a11              LDR      r2,|L2.636|
000238  eb020181          ADD      r1,r2,r1,LSL #2       ;142
00023c  f8c10c00          STR      r0,[r1,#0xc00]        ;142
000240  490a              LDR      r1,|L2.620|
000242  7809              LDRB     r1,[r1,#0]            ;145  ; EPindex
000244  1e49              SUBS     r1,r1,#1              ;145
000246  4a0f              LDR      r2,|L2.644|
000248  f8520021          LDR      r0,[r2,r1,LSL #2]     ;145
00024c  4780              BLX      r0                    ;145
                  |L2.590|
00024e  4808              LDR      r0,|L2.624|
000250  3044              ADDS     r0,r0,#0x44           ;57
000252  6800              LDR      r0,[r0,#0]            ;57
000254  b280              UXTH     r0,r0                 ;57
000256  4904              LDR      r1,|L2.616|
000258  8008              STRH     r0,[r1,#0]            ;57
00025a  f4004000          AND      r0,r0,#0x8000         ;57
00025e  2800              CMP      r0,#0                 ;57
000260  f47faed2          BNE      |L2.8|
000264  bf00              NOP      
000266  e730              B        |L2.202|
;;;152    
                          ENDP

                  |L2.616|
                          DCD      wIstr
                  |L2.620|
                          DCD      EPindex
                  |L2.624|
                          DCD      0x40005c00
                  |L2.628|
                          DCD      SaveRState
                  |L2.632|
                          DCD      SaveTState
                  |L2.636|
                          DCD      0x40005000
                  |L2.640|
                          DCD      pEpInt_OUT
                  |L2.644|
                          DCD      pEpInt_IN

                          AREA ||.data||, DATA, ALIGN=1

                  SaveRState
000000  0000              DCB      0x00,0x00
                  SaveTState
000002  0000              DCB      0x00,0x00
