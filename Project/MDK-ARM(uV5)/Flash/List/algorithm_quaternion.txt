; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\algorithm_quaternion.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\algorithm_quaternion.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\GPS -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Heigh -I..\..\User\Algorithm\ekf2 -IC:\__Electronic_Projects\STM32\HT_Hawk_0528_1\Project\MDK-ARM(uV5)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\algorithm_quaternion.crf ..\..\User\Algorithm\Algorithm_quaternion\Algorithm_quaternion.c]
                          THUMB

                          AREA ||i.Quaternion_Multiply||, CODE, READONLY, ALIGN=1

                  Quaternion_Multiply PROC
;;;99     /*====================================================================================================*/
;;;100    Quaternion Quaternion_Multiply( Quaternion NowQ, Quaternion OldQ )
000000  b40f              PUSH     {r0-r3}
;;;101    {
000002  e92d47ff          PUSH     {r0-r10,lr}
000006  4604              MOV      r4,r0
;;;102      Quaternion NewQ;
;;;103    
;;;104      NewQ.q0 = NowQ.q0*OldQ.q0 - NowQ.q1*OldQ.q1 - NowQ.q2*OldQ.q2 - NowQ.q3*OldQ.q3;
000008  9914              LDR      r1,[sp,#0x50]
00000a  9810              LDR      r0,[sp,#0x40]
00000c  f7fffffe          BL       __aeabi_fmul
000010  4607              MOV      r7,r0
000012  9913              LDR      r1,[sp,#0x4c]
000014  980f              LDR      r0,[sp,#0x3c]
000016  f7fffffe          BL       __aeabi_fmul
00001a  4680              MOV      r8,r0
00001c  9912              LDR      r1,[sp,#0x48]
00001e  980e              LDR      r0,[sp,#0x38]
000020  f7fffffe          BL       __aeabi_fmul
000024  4681              MOV      r9,r0
000026  9911              LDR      r1,[sp,#0x44]
000028  980d              LDR      r0,[sp,#0x34]
00002a  f7fffffe          BL       __aeabi_fmul
00002e  4682              MOV      r10,r0
000030  4649              MOV      r1,r9
000032  f7fffffe          BL       __aeabi_fsub
000036  4606              MOV      r6,r0
000038  4641              MOV      r1,r8
00003a  f7fffffe          BL       __aeabi_fsub
00003e  4605              MOV      r5,r0
000040  4639              MOV      r1,r7
000042  f7fffffe          BL       __aeabi_fsub
000046  9000              STR      r0,[sp,#0]
;;;105      NewQ.q1 = NowQ.q0*OldQ.q1 + NowQ.q1*OldQ.q0 + NowQ.q2*OldQ.q3 - NowQ.q3*OldQ.q2;
000048  9913              LDR      r1,[sp,#0x4c]
00004a  9810              LDR      r0,[sp,#0x40]
00004c  f7fffffe          BL       __aeabi_fmul
000050  4607              MOV      r7,r0
000052  9914              LDR      r1,[sp,#0x50]
000054  980f              LDR      r0,[sp,#0x3c]
000056  f7fffffe          BL       __aeabi_fmul
00005a  4680              MOV      r8,r0
00005c  9911              LDR      r1,[sp,#0x44]
00005e  980e              LDR      r0,[sp,#0x38]
000060  f7fffffe          BL       __aeabi_fmul
000064  4681              MOV      r9,r0
000066  9912              LDR      r1,[sp,#0x48]
000068  980d              LDR      r0,[sp,#0x34]
00006a  f7fffffe          BL       __aeabi_fmul
00006e  4682              MOV      r10,r0
000070  4649              MOV      r1,r9
000072  f7fffffe          BL       __aeabi_fadd
000076  4606              MOV      r6,r0
000078  4641              MOV      r1,r8
00007a  f7fffffe          BL       __aeabi_fadd
00007e  4605              MOV      r5,r0
000080  4639              MOV      r1,r7
000082  f7fffffe          BL       __aeabi_fsub
000086  9001              STR      r0,[sp,#4]
;;;106      NewQ.q2 = NowQ.q0*OldQ.q2 - NowQ.q1*OldQ.q3 + NowQ.q2*OldQ.q0 + NowQ.q3*OldQ.q1;
000088  9912              LDR      r1,[sp,#0x48]
00008a  9810              LDR      r0,[sp,#0x40]
00008c  f7fffffe          BL       __aeabi_fmul
000090  4607              MOV      r7,r0
000092  9911              LDR      r1,[sp,#0x44]
000094  980f              LDR      r0,[sp,#0x3c]
000096  f7fffffe          BL       __aeabi_fmul
00009a  4680              MOV      r8,r0
00009c  9914              LDR      r1,[sp,#0x50]
00009e  980e              LDR      r0,[sp,#0x38]
0000a0  f7fffffe          BL       __aeabi_fmul
0000a4  4681              MOV      r9,r0
0000a6  9913              LDR      r1,[sp,#0x4c]
0000a8  980d              LDR      r0,[sp,#0x34]
0000aa  f7fffffe          BL       __aeabi_fmul
0000ae  4682              MOV      r10,r0
0000b0  4649              MOV      r1,r9
0000b2  f7fffffe          BL       __aeabi_fsub
0000b6  4606              MOV      r6,r0
0000b8  4641              MOV      r1,r8
0000ba  f7fffffe          BL       __aeabi_fadd
0000be  4605              MOV      r5,r0
0000c0  4639              MOV      r1,r7
0000c2  f7fffffe          BL       __aeabi_fadd
0000c6  9002              STR      r0,[sp,#8]
;;;107      NewQ.q3 = NowQ.q0*OldQ.q3 + NowQ.q1*OldQ.q2 - NowQ.q2*OldQ.q1 + NowQ.q3*OldQ.q0;
0000c8  9911              LDR      r1,[sp,#0x44]
0000ca  9810              LDR      r0,[sp,#0x40]
0000cc  f7fffffe          BL       __aeabi_fmul
0000d0  4607              MOV      r7,r0
0000d2  9912              LDR      r1,[sp,#0x48]
0000d4  980f              LDR      r0,[sp,#0x3c]
0000d6  f7fffffe          BL       __aeabi_fmul
0000da  4680              MOV      r8,r0
0000dc  9913              LDR      r1,[sp,#0x4c]
0000de  980e              LDR      r0,[sp,#0x38]
0000e0  f7fffffe          BL       __aeabi_fmul
0000e4  4681              MOV      r9,r0
0000e6  9914              LDR      r1,[sp,#0x50]
0000e8  980d              LDR      r0,[sp,#0x34]
0000ea  f7fffffe          BL       __aeabi_fmul
0000ee  4682              MOV      r10,r0
0000f0  4649              MOV      r1,r9
0000f2  f7fffffe          BL       __aeabi_fadd
0000f6  4606              MOV      r6,r0
0000f8  4641              MOV      r1,r8
0000fa  f7fffffe          BL       __aeabi_fsub
0000fe  4605              MOV      r5,r0
000100  4639              MOV      r1,r7
000102  f7fffffe          BL       __aeabi_fadd
000106  9003              STR      r0,[sp,#0xc]
;;;108    
;;;109      Quaternion_Normalize(&NewQ);
000108  4668              MOV      r0,sp
00010a  f7fffffe          BL       Quaternion_Normalize
;;;110    
;;;111      return NewQ;
00010e  9800              LDR      r0,[sp,#0]
000110  6020              STR      r0,[r4,#0]
000112  9801              LDR      r0,[sp,#4]
000114  6060              STR      r0,[r4,#4]
000116  9802              LDR      r0,[sp,#8]
000118  60a0              STR      r0,[r4,#8]
00011a  9803              LDR      r0,[sp,#0xc]
00011c  60e0              STR      r0,[r4,#0xc]
;;;112    }
00011e  e8bd07ff          POP      {r0-r10}
000122  f85dfb14          LDR      pc,[sp],#0x14
;;;113    /*====================================================================================================*/
                          ENDP


                          AREA ||i.Quaternion_Normalize||, CODE, READONLY, ALIGN=1

                  Quaternion_Normalize PROC
;;;121    /*====================================================================================================*/
;;;122    void Quaternion_Normalize( Quaternion *pNumQ )
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;123    {
000004  4604              MOV      r4,r0
;;;124      fp32 Normalize = 0.0f;
000006  2500              MOVS     r5,#0
;;;125    
;;;126    	Normalize = Q_rsqrt(squa(pNumQ->q0) + squa(pNumQ->q1) + squa(pNumQ->q2) + squa(pNumQ->q3));
000008  68e1              LDR      r1,[r4,#0xc]
00000a  68e0              LDR      r0,[r4,#0xc]
00000c  f7fffffe          BL       __aeabi_fmul
000010  9000              STR      r0,[sp,#0]
000012  68a1              LDR      r1,[r4,#8]
000014  68a0              LDR      r0,[r4,#8]
000016  f7fffffe          BL       __aeabi_fmul
00001a  4681              MOV      r9,r0
00001c  6861              LDR      r1,[r4,#4]
00001e  6860              LDR      r0,[r4,#4]
000020  f7fffffe          BL       __aeabi_fmul
000024  4682              MOV      r10,r0
000026  6821              LDR      r1,[r4,#0]
000028  6820              LDR      r0,[r4,#0]
00002a  f7fffffe          BL       __aeabi_fmul
00002e  4683              MOV      r11,r0
000030  4651              MOV      r1,r10
000032  f7fffffe          BL       __aeabi_fadd
000036  4680              MOV      r8,r0
000038  4649              MOV      r1,r9
00003a  f7fffffe          BL       __aeabi_fadd
00003e  4607              MOV      r7,r0
000040  9900              LDR      r1,[sp,#0]
000042  f7fffffe          BL       __aeabi_fadd
000046  4606              MOV      r6,r0
000048  f7fffffe          BL       Q_rsqrt
00004c  4605              MOV      r5,r0
;;;127    
;;;128      pNumQ->q0 = pNumQ->q0 * Normalize;
00004e  6820              LDR      r0,[r4,#0]
000050  4629              MOV      r1,r5
000052  f7fffffe          BL       __aeabi_fmul
000056  6020              STR      r0,[r4,#0]
;;;129      pNumQ->q1 = pNumQ->q1 * Normalize;
000058  6860              LDR      r0,[r4,#4]
00005a  4629              MOV      r1,r5
00005c  f7fffffe          BL       __aeabi_fmul
000060  6060              STR      r0,[r4,#4]
;;;130      pNumQ->q2 = pNumQ->q2 * Normalize;
000062  68a0              LDR      r0,[r4,#8]
000064  4629              MOV      r1,r5
000066  f7fffffe          BL       __aeabi_fmul
00006a  60a0              STR      r0,[r4,#8]
;;;131      pNumQ->q3 = pNumQ->q3 * Normalize;
00006c  68e0              LDR      r0,[r4,#0xc]
00006e  4629              MOV      r1,r5
000070  f7fffffe          BL       __aeabi_fmul
000074  60e0              STR      r0,[r4,#0xc]
;;;132    }
000076  e8bd8ff8          POP      {r3-r11,pc}
;;;133    /*====================================================================================================*/
                          ENDP


                          AREA ||i.Quaternion_RungeKutta||, CODE, READONLY, ALIGN=1

                  Quaternion_RungeKutta PROC
;;;141    /*====================================================================================================*/
;;;142    void Quaternion_RungeKutta( Quaternion *pNumQ, float GyrX, float GyrY, float GyrZ, float helfTimes )
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;143    {
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
;;;144      fp32 tmpq0 = pNumQ->q0;
00000c  6820              LDR      r0,[r4,#0]
00000e  9006              STR      r0,[sp,#0x18]
;;;145      fp32 tmpq1 = pNumQ->q1;
000010  6867              LDR      r7,[r4,#4]
;;;146      fp32 tmpq2 = pNumQ->q2;
000012  f8d48008          LDR      r8,[r4,#8]
;;;147      fp32 tmpq3 = pNumQ->q3;
000016  68e0              LDR      r0,[r4,#0xc]
000018  9005              STR      r0,[sp,#0x14]
;;;148    
;;;149      pNumQ->q0 = pNumQ->q0 + (-tmpq1*GyrX - tmpq2*GyrY - tmpq3*GyrZ) * helfTimes;
00001a  4631              MOV      r1,r6
00001c  9805              LDR      r0,[sp,#0x14]
00001e  f7fffffe          BL       __aeabi_fmul
000022  4629              MOV      r1,r5
000024  9004              STR      r0,[sp,#0x10]
000026  4640              MOV      r0,r8
000028  f7fffffe          BL       __aeabi_fmul
00002c  9003              STR      r0,[sp,#0xc]
00002e  f0874000          EOR      r0,r7,#0x80000000
000032  9001              STR      r0,[sp,#4]
000034  9908              LDR      r1,[sp,#0x20]
000036  f7fffffe          BL       __aeabi_fmul
00003a  9002              STR      r0,[sp,#8]
00003c  9903              LDR      r1,[sp,#0xc]
00003e  f7fffffe          BL       __aeabi_fsub
000042  4683              MOV      r11,r0
000044  9904              LDR      r1,[sp,#0x10]
000046  f7fffffe          BL       __aeabi_fsub
00004a  4682              MOV      r10,r0
00004c  9914              LDR      r1,[sp,#0x50]
00004e  f7fffffe          BL       __aeabi_fmul
000052  4681              MOV      r9,r0
000054  6821              LDR      r1,[r4,#0]
000056  f7fffffe          BL       __aeabi_fadd
00005a  6020              STR      r0,[r4,#0]
;;;150      pNumQ->q1 = pNumQ->q1 + ( tmpq0*GyrX - tmpq3*GyrY + tmpq2*GyrZ) * helfTimes;
00005c  4631              MOV      r1,r6
00005e  4640              MOV      r0,r8
000060  f7fffffe          BL       __aeabi_fmul
000064  4629              MOV      r1,r5
000066  9004              STR      r0,[sp,#0x10]
000068  9805              LDR      r0,[sp,#0x14]
00006a  f7fffffe          BL       __aeabi_fmul
00006e  9003              STR      r0,[sp,#0xc]
000070  9908              LDR      r1,[sp,#0x20]
000072  9806              LDR      r0,[sp,#0x18]
000074  f7fffffe          BL       __aeabi_fmul
000078  9002              STR      r0,[sp,#8]
00007a  9903              LDR      r1,[sp,#0xc]
00007c  f7fffffe          BL       __aeabi_fsub
000080  4683              MOV      r11,r0
000082  9904              LDR      r1,[sp,#0x10]
000084  f7fffffe          BL       __aeabi_fadd
000088  4682              MOV      r10,r0
00008a  9914              LDR      r1,[sp,#0x50]
00008c  f7fffffe          BL       __aeabi_fmul
000090  4681              MOV      r9,r0
000092  6861              LDR      r1,[r4,#4]
000094  f7fffffe          BL       __aeabi_fadd
000098  6060              STR      r0,[r4,#4]
;;;151      pNumQ->q2 = pNumQ->q2 + ( tmpq3*GyrX + tmpq0*GyrY - tmpq1*GyrZ) * helfTimes;
00009a  4631              MOV      r1,r6
00009c  4638              MOV      r0,r7
00009e  f7fffffe          BL       __aeabi_fmul
0000a2  4629              MOV      r1,r5
0000a4  9004              STR      r0,[sp,#0x10]
0000a6  9806              LDR      r0,[sp,#0x18]
0000a8  f7fffffe          BL       __aeabi_fmul
0000ac  9003              STR      r0,[sp,#0xc]
0000ae  9908              LDR      r1,[sp,#0x20]
0000b0  9805              LDR      r0,[sp,#0x14]
0000b2  f7fffffe          BL       __aeabi_fmul
0000b6  9002              STR      r0,[sp,#8]
0000b8  9903              LDR      r1,[sp,#0xc]
0000ba  f7fffffe          BL       __aeabi_fadd
0000be  4683              MOV      r11,r0
0000c0  9904              LDR      r1,[sp,#0x10]
0000c2  f7fffffe          BL       __aeabi_fsub
0000c6  4682              MOV      r10,r0
0000c8  9914              LDR      r1,[sp,#0x50]
0000ca  f7fffffe          BL       __aeabi_fmul
0000ce  4681              MOV      r9,r0
0000d0  68a1              LDR      r1,[r4,#8]
0000d2  f7fffffe          BL       __aeabi_fadd
0000d6  60a0              STR      r0,[r4,#8]
;;;152      pNumQ->q3 = pNumQ->q3 + (-tmpq2*GyrX + tmpq1*GyrY + tmpq0*GyrZ) * helfTimes;
0000d8  4631              MOV      r1,r6
0000da  9806              LDR      r0,[sp,#0x18]
0000dc  f7fffffe          BL       __aeabi_fmul
0000e0  4629              MOV      r1,r5
0000e2  9004              STR      r0,[sp,#0x10]
0000e4  4638              MOV      r0,r7
0000e6  f7fffffe          BL       __aeabi_fmul
0000ea  9003              STR      r0,[sp,#0xc]
0000ec  f0884000          EOR      r0,r8,#0x80000000
0000f0  9001              STR      r0,[sp,#4]
0000f2  9908              LDR      r1,[sp,#0x20]
0000f4  f7fffffe          BL       __aeabi_fmul
0000f8  9002              STR      r0,[sp,#8]
0000fa  9903              LDR      r1,[sp,#0xc]
0000fc  f7fffffe          BL       __aeabi_fadd
000100  4683              MOV      r11,r0
000102  9904              LDR      r1,[sp,#0x10]
000104  f7fffffe          BL       __aeabi_fadd
000108  4682              MOV      r10,r0
00010a  9914              LDR      r1,[sp,#0x50]
00010c  f7fffffe          BL       __aeabi_fmul
000110  4681              MOV      r9,r0
000112  68e1              LDR      r1,[r4,#0xc]
000114  f7fffffe          BL       __aeabi_fadd
000118  60e0              STR      r0,[r4,#0xc]
;;;153    }
00011a  b00b              ADD      sp,sp,#0x2c
00011c  e8bd8ff0          POP      {r4-r11,pc}
;;;154    /*====================================================================================================*/
                          ENDP


                          AREA ||i.Quaternion_ToAngE||, CODE, READONLY, ALIGN=2

                  Quaternion_ToAngE PROC
;;;76     /*====================================================================================================*/
;;;77     void Quaternion_ToAngE( Quaternion *pNumQ, EulerAngle *pAngE )
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;78     {
000004  b085              SUB      sp,sp,#0x14
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;79       fp32 NumQ_T11 = pNumQ->q0*pNumQ->q0 + pNumQ->q1*pNumQ->q1 - pNumQ->q2*pNumQ->q2 - pNumQ->q3*pNumQ->q3;
00000a  68e1              LDR      r1,[r4,#0xc]
00000c  68e0              LDR      r0,[r4,#0xc]
00000e  f7fffffe          BL       __aeabi_fmul
000012  9003              STR      r0,[sp,#0xc]
000014  68a1              LDR      r1,[r4,#8]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       __aeabi_fmul
00001c  9002              STR      r0,[sp,#8]
00001e  6861              LDR      r1,[r4,#4]
000020  6860              LDR      r0,[r4,#4]
000022  f7fffffe          BL       __aeabi_fmul
000026  9001              STR      r0,[sp,#4]
000028  6821              LDR      r1,[r4,#0]
00002a  6820              LDR      r0,[r4,#0]
00002c  f7fffffe          BL       __aeabi_fmul
000030  9000              STR      r0,[sp,#0]
000032  9901              LDR      r1,[sp,#4]
000034  f7fffffe          BL       __aeabi_fadd
000038  4683              MOV      r11,r0
00003a  9902              LDR      r1,[sp,#8]
00003c  f7fffffe          BL       __aeabi_fsub
000040  4682              MOV      r10,r0
000042  9903              LDR      r1,[sp,#0xc]
000044  f7fffffe          BL       __aeabi_fsub
000048  4606              MOV      r6,r0
;;;80       fp32 NumQ_T12 = 2.0f*(pNumQ->q0*pNumQ->q3 + pNumQ->q1*pNumQ->q2);
00004a  68a1              LDR      r1,[r4,#8]
00004c  6860              LDR      r0,[r4,#4]
00004e  f7fffffe          BL       __aeabi_fmul
000052  4683              MOV      r11,r0
000054  68e1              LDR      r1,[r4,#0xc]
000056  6820              LDR      r0,[r4,#0]
000058  f7fffffe          BL       __aeabi_fmul
00005c  4659              MOV      r1,r11
00005e  9003              STR      r0,[sp,#0xc]
000060  f7fffffe          BL       __aeabi_fadd
000064  4682              MOV      r10,r0
000066  f04f4180          MOV      r1,#0x40000000
00006a  f7fffffe          BL       __aeabi_fmul
00006e  4607              MOV      r7,r0
;;;81       fp32 NumQ_T13 = 2.0f*(pNumQ->q1*pNumQ->q3 - pNumQ->q0*pNumQ->q2);
000070  68a1              LDR      r1,[r4,#8]
000072  6820              LDR      r0,[r4,#0]
000074  f7fffffe          BL       __aeabi_fmul
000078  4683              MOV      r11,r0
00007a  68e1              LDR      r1,[r4,#0xc]
00007c  6860              LDR      r0,[r4,#4]
00007e  f7fffffe          BL       __aeabi_fmul
000082  4659              MOV      r1,r11
000084  9003              STR      r0,[sp,#0xc]
000086  f7fffffe          BL       __aeabi_fsub
00008a  4682              MOV      r10,r0
00008c  f04f4180          MOV      r1,#0x40000000
000090  f7fffffe          BL       __aeabi_fmul
000094  4680              MOV      r8,r0
;;;82       fp32 NumQ_T23 = 2.0f*(pNumQ->q0*pNumQ->q1 + pNumQ->q2*pNumQ->q3);
000096  68e1              LDR      r1,[r4,#0xc]
000098  68a0              LDR      r0,[r4,#8]
00009a  f7fffffe          BL       __aeabi_fmul
00009e  4683              MOV      r11,r0
0000a0  6861              LDR      r1,[r4,#4]
0000a2  6820              LDR      r0,[r4,#0]
0000a4  f7fffffe          BL       __aeabi_fmul
0000a8  4659              MOV      r1,r11
0000aa  9003              STR      r0,[sp,#0xc]
0000ac  f7fffffe          BL       __aeabi_fadd
0000b0  4682              MOV      r10,r0
0000b2  f04f4180          MOV      r1,#0x40000000
0000b6  f7fffffe          BL       __aeabi_fmul
0000ba  4681              MOV      r9,r0
;;;83       fp32 NumQ_T33 = pNumQ->q0*pNumQ->q0 - pNumQ->q1*pNumQ->q1 - pNumQ->q2*pNumQ->q2 + pNumQ->q3*pNumQ->q3;
0000bc  68e1              LDR      r1,[r4,#0xc]
0000be  68e0              LDR      r0,[r4,#0xc]
0000c0  f7fffffe          BL       __aeabi_fmul
0000c4  9003              STR      r0,[sp,#0xc]
0000c6  68a1              LDR      r1,[r4,#8]
0000c8  68a0              LDR      r0,[r4,#8]
0000ca  f7fffffe          BL       __aeabi_fmul
0000ce  9002              STR      r0,[sp,#8]
0000d0  6861              LDR      r1,[r4,#4]
0000d2  6860              LDR      r0,[r4,#4]
0000d4  f7fffffe          BL       __aeabi_fmul
0000d8  9001              STR      r0,[sp,#4]
0000da  6821              LDR      r1,[r4,#0]
0000dc  6820              LDR      r0,[r4,#0]
0000de  f7fffffe          BL       __aeabi_fmul
0000e2  9000              STR      r0,[sp,#0]
0000e4  9901              LDR      r1,[sp,#4]
0000e6  f7fffffe          BL       __aeabi_fsub
0000ea  4683              MOV      r11,r0
0000ec  9902              LDR      r1,[sp,#8]
0000ee  f7fffffe          BL       __aeabi_fsub
0000f2  4682              MOV      r10,r0
0000f4  9903              LDR      r1,[sp,#0xc]
0000f6  f7fffffe          BL       __aeabi_fadd
0000fa  9004              STR      r0,[sp,#0x10]
;;;84     
;;;85       pAngE->Pitch = -asinf(NumQ_T13);
0000fc  4640              MOV      r0,r8
0000fe  f7fffffe          BL       asinf
000102  f0804000          EOR      r0,r0,#0x80000000
000106  6028              STR      r0,[r5,#0]
;;;86       pAngE->Roll    = atan2f(NumQ_T23, NumQ_T33);
000108  4648              MOV      r0,r9
00010a  9904              LDR      r1,[sp,#0x10]
00010c  f7fffffe          BL       atan2f
000110  6068              STR      r0,[r5,#4]
;;;87     	
;;;88     	if(flag.MagIssue || !flag.MagExist)
000112  4807              LDR      r0,|L4.304|
000114  78c0              LDRB     r0,[r0,#3]  ; flag
000116  b910              CBNZ     r0,|L4.286|
000118  4805              LDR      r0,|L4.304|
00011a  7840              LDRB     r0,[r0,#1]  ; flag
00011c  b920              CBNZ     r0,|L4.296|
                  |L4.286|
;;;89     		pAngE->Yaw    = atan2f(NumQ_T12, NumQ_T11);
00011e  4631              MOV      r1,r6
000120  4638              MOV      r0,r7
000122  f7fffffe          BL       atan2f
000126  60a8              STR      r0,[r5,#8]
                  |L4.296|
;;;90     }
000128  b005              ADD      sp,sp,#0x14
00012a  e8bd8ff0          POP      {r4-r11,pc}
;;;91     /*====================================================================================================*/
                          ENDP

00012e  0000              DCW      0x0000
                  |L4.304|
                          DCD      flag

                          AREA ||i.Quaternion_ToNumQ||, CODE, READONLY, ALIGN=1

                  Quaternion_ToNumQ PROC
;;;40     /*====================================================================================================*/
;;;41     void Quaternion_ToNumQ( Quaternion *pNumQ, EulerAngle *pAngE )
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;42     {
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;43       fp32 halfP = pAngE->Pitch/2.0f;
00000a  f04f4180          MOV      r1,#0x40000000
00000e  6828              LDR      r0,[r5,#0]
000010  f7fffffe          BL       __aeabi_fdiv
000014  4680              MOV      r8,r0
;;;44       fp32 halfR = pAngE->Roll/2.0f;
000016  f04f4180          MOV      r1,#0x40000000
00001a  6868              LDR      r0,[r5,#4]
00001c  f7fffffe          BL       __aeabi_fdiv
000020  4681              MOV      r9,r0
;;;45       fp32 halfY = pAngE->Yaw/2.0f;
000022  f04f4180          MOV      r1,#0x40000000
000026  68a8              LDR      r0,[r5,#8]
000028  f7fffffe          BL       __aeabi_fdiv
00002c  4682              MOV      r10,r0
;;;46     
;;;47     #ifndef USE_ARM_MATH_LIB
;;;48       fp32 sinP = sinf(halfP);
00002e  4640              MOV      r0,r8
000030  f7fffffe          BL       sinf
000034  9006              STR      r0,[sp,#0x18]
;;;49       fp32 cosP = cosf(halfP);
000036  4640              MOV      r0,r8
000038  f7fffffe          BL       cosf
00003c  9005              STR      r0,[sp,#0x14]
;;;50       fp32 sinR = sinf(halfR);
00003e  4648              MOV      r0,r9
000040  f7fffffe          BL       sinf
000044  9004              STR      r0,[sp,#0x10]
;;;51       fp32 cosR = cosf(halfR);
000046  4648              MOV      r0,r9
000048  f7fffffe          BL       cosf
00004c  9003              STR      r0,[sp,#0xc]
;;;52       fp32 sinY = sinf(halfY);
00004e  4650              MOV      r0,r10
000050  f7fffffe          BL       sinf
000054  9002              STR      r0,[sp,#8]
;;;53       fp32 cosY = cosf(halfY);
000056  4650              MOV      r0,r10
000058  f7fffffe          BL       cosf
00005c  9001              STR      r0,[sp,#4]
;;;54     #else
;;;55       fp32 sinP = arm_sin_f32(halfP);
;;;56       fp32 cosP = arm_cos_f32(halfP);
;;;57       fp32 sinR = arm_sin_f32(halfR);
;;;58       fp32 cosR = arm_cos_f32(halfR);
;;;59       fp32 sinY = arm_sin_f32(halfY);  
;;;60       fp32 cosY = arm_cos_f32(halfY);
;;;61     #endif
;;;62     
;;;63       pNumQ->q0 = cosY*cosR*cosP + sinY*sinR*sinP;
00005e  9904              LDR      r1,[sp,#0x10]
000060  9802              LDR      r0,[sp,#8]
000062  f7fffffe          BL       __aeabi_fmul
000066  4683              MOV      r11,r0
000068  9906              LDR      r1,[sp,#0x18]
00006a  f7fffffe          BL       __aeabi_fmul
00006e  4606              MOV      r6,r0
000070  9903              LDR      r1,[sp,#0xc]
000072  9801              LDR      r0,[sp,#4]
000074  f7fffffe          BL       __aeabi_fmul
000078  4683              MOV      r11,r0
00007a  9905              LDR      r1,[sp,#0x14]
00007c  f7fffffe          BL       __aeabi_fmul
000080  4607              MOV      r7,r0
000082  4631              MOV      r1,r6
000084  f7fffffe          BL       __aeabi_fadd
000088  6020              STR      r0,[r4,#0]
;;;64       pNumQ->q1 = cosY*cosR*sinP - sinY*sinR*cosP;
00008a  9904              LDR      r1,[sp,#0x10]
00008c  9802              LDR      r0,[sp,#8]
00008e  f7fffffe          BL       __aeabi_fmul
000092  4683              MOV      r11,r0
000094  9905              LDR      r1,[sp,#0x14]
000096  f7fffffe          BL       __aeabi_fmul
00009a  4606              MOV      r6,r0
00009c  9903              LDR      r1,[sp,#0xc]
00009e  9801              LDR      r0,[sp,#4]
0000a0  f7fffffe          BL       __aeabi_fmul
0000a4  4683              MOV      r11,r0
0000a6  9906              LDR      r1,[sp,#0x18]
0000a8  f7fffffe          BL       __aeabi_fmul
0000ac  4607              MOV      r7,r0
0000ae  4631              MOV      r1,r6
0000b0  f7fffffe          BL       __aeabi_fsub
0000b4  6060              STR      r0,[r4,#4]
;;;65       pNumQ->q2 = cosY*sinR*cosP + sinY*cosR*sinP;
0000b6  e9dd0102          LDRD     r0,r1,[sp,#8]
0000ba  f7fffffe          BL       __aeabi_fmul
0000be  4683              MOV      r11,r0
0000c0  9906              LDR      r1,[sp,#0x18]
0000c2  f7fffffe          BL       __aeabi_fmul
0000c6  4606              MOV      r6,r0
0000c8  9904              LDR      r1,[sp,#0x10]
0000ca  9801              LDR      r0,[sp,#4]
0000cc  f7fffffe          BL       __aeabi_fmul
0000d0  4683              MOV      r11,r0
0000d2  9905              LDR      r1,[sp,#0x14]
0000d4  f7fffffe          BL       __aeabi_fmul
0000d8  4607              MOV      r7,r0
0000da  4631              MOV      r1,r6
0000dc  f7fffffe          BL       __aeabi_fadd
0000e0  60a0              STR      r0,[r4,#8]
;;;66       pNumQ->q3 = sinY*cosR*cosP - cosY*sinR*sinP;
0000e2  9904              LDR      r1,[sp,#0x10]
0000e4  9801              LDR      r0,[sp,#4]
0000e6  f7fffffe          BL       __aeabi_fmul
0000ea  4683              MOV      r11,r0
0000ec  9906              LDR      r1,[sp,#0x18]
0000ee  f7fffffe          BL       __aeabi_fmul
0000f2  4606              MOV      r6,r0
0000f4  e9dd0102          LDRD     r0,r1,[sp,#8]
0000f8  f7fffffe          BL       __aeabi_fmul
0000fc  4683              MOV      r11,r0
0000fe  9905              LDR      r1,[sp,#0x14]
000100  f7fffffe          BL       __aeabi_fmul
000104  4607              MOV      r7,r0
000106  4631              MOV      r1,r6
000108  f7fffffe          BL       __aeabi_fsub
00010c  60e0              STR      r0,[r4,#0xc]
;;;67     }
00010e  b007              ADD      sp,sp,#0x1c
000110  e8bd8ff0          POP      {r4-r11,pc}
;;;68     /*====================================================================================================*/
                          ENDP


                          AREA ||i.Quaternion_vectorGravity||, CODE, READONLY, ALIGN=1

                  Quaternion_vectorGravity PROC
;;;22     /*====================================================================================================*/
;;;23     Gravity Quaternion_vectorGravity( Quaternion *pNumQ )
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;24     {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;25     	Gravity G;
;;;26       G.x = 2*(pNumQ->q1*pNumQ->q3 - pNumQ->q0*pNumQ->q2);								
000008  68a1              LDR      r1,[r4,#8]
00000a  6820              LDR      r0,[r4,#0]
00000c  f7fffffe          BL       __aeabi_fmul
000010  4607              MOV      r7,r0
000012  68e1              LDR      r1,[r4,#0xc]
000014  6860              LDR      r0,[r4,#4]
000016  f7fffffe          BL       __aeabi_fmul
00001a  4680              MOV      r8,r0
00001c  4639              MOV      r1,r7
00001e  f7fffffe          BL       __aeabi_fsub
000022  4606              MOV      r6,r0
000024  f04f4180          MOV      r1,#0x40000000
000028  f7fffffe          BL       __aeabi_fmul
00002c  9000              STR      r0,[sp,#0]
;;;27       G.y = 2*(pNumQ->q0*pNumQ->q1 + pNumQ->q2*pNumQ->q3);						  
00002e  68e1              LDR      r1,[r4,#0xc]
000030  68a0              LDR      r0,[r4,#8]
000032  f7fffffe          BL       __aeabi_fmul
000036  4607              MOV      r7,r0
000038  6861              LDR      r1,[r4,#4]
00003a  6820              LDR      r0,[r4,#0]
00003c  f7fffffe          BL       __aeabi_fmul
000040  4680              MOV      r8,r0
000042  4639              MOV      r1,r7
000044  f7fffffe          BL       __aeabi_fadd
000048  4606              MOV      r6,r0
00004a  f04f4180          MOV      r1,#0x40000000
00004e  f7fffffe          BL       __aeabi_fmul
000052  9001              STR      r0,[sp,#4]
;;;28       G.z = 1-2*(pNumQ->q1*pNumQ->q1 + pNumQ->q2*pNumQ->q2);
000054  68a1              LDR      r1,[r4,#8]
000056  68a0              LDR      r0,[r4,#8]
000058  f7fffffe          BL       __aeabi_fmul
00005c  4680              MOV      r8,r0
00005e  6861              LDR      r1,[r4,#4]
000060  6860              LDR      r0,[r4,#4]
000062  f7fffffe          BL       __aeabi_fmul
000066  4681              MOV      r9,r0
000068  4641              MOV      r1,r8
00006a  f7fffffe          BL       __aeabi_fadd
00006e  4607              MOV      r7,r0
000070  f04f4180          MOV      r1,#0x40000000
000074  f7fffffe          BL       __aeabi_fmul
000078  4606              MOV      r6,r0
00007a  f04f517e          MOV      r1,#0x3f800000
00007e  f7fffffe          BL       __aeabi_frsub
000082  9002              STR      r0,[sp,#8]
;;;29     	
;;;30     	return G;
000084  9800              LDR      r0,[sp,#0]
000086  6028              STR      r0,[r5,#0]
000088  9801              LDR      r0,[sp,#4]
00008a  6068              STR      r0,[r5,#4]
00008c  9802              LDR      r0,[sp,#8]
00008e  60a8              STR      r0,[r5,#8]
;;;31     }
000090  e8bd83fe          POP      {r1-r9,pc}
;;;32     /*====================================================================================================*/
                          ENDP

