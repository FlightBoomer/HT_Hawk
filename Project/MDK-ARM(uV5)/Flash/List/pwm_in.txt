; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\pwm_in.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\pwm_in.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\GPS -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Heigh -IC:\__Electronic_Projects\STM32\HT_Hawk_0528_1\Project\MDK-ARM(uV5)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\pwm_in.crf ..\..\User\Driver\PWM_IN\pwm_in.c]
                          THUMB

                          AREA ||i.PWM_IN_Config||, CODE, READONLY, ALIGN=2

                  PWM_IN_Config PROC
;;;26     /*====================================================================================================*/
;;;27     void PWM_IN_Config(void)
000000  b500              PUSH     {lr}
;;;28     {
000002  b087              SUB      sp,sp,#0x1c
;;;29     	  GPIO_InitTypeDef         GPIO_InitStructure;
;;;30     	  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;31     	  TIM_ICInitTypeDef  TIM2_ICInitStructure;
;;;32     
;;;33     	  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2 | RCC_APB1Periph_TIM3, ENABLE);	 //使能TIM2时钟
000004  2101              MOVS     r1,#1
000006  2003              MOVS     r0,#3
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;34      	  RCC_APB2PeriphClockCmd(RCC_GPIO_TIM2 | RCC_GPIO_TIM3 |RCC_APB2Periph_GPIOB, ENABLE);  
00000c  2101              MOVS     r1,#1
00000e  200c              MOVS     r0,#0xc
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;35     
;;;36     	  GPIO_InitStructure.GPIO_Pin  = TIM2_CH1 | TIM2_CH2 | TIM2_CH3 | TIM2_CH4;             
000014  200f              MOVS     r0,#0xf
000016  f8ad0018          STRH     r0,[sp,#0x18]
;;;37     	  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;            
00001a  2028              MOVS     r0,#0x28
00001c  f88d001b          STRB     r0,[sp,#0x1b]
;;;38     	  GPIO_Init(GPIO_TIM2, &GPIO_InitStructure);	
000020  a906              ADD      r1,sp,#0x18
000022  4855              LDR      r0,|L1.376|
000024  f7fffffe          BL       GPIO_Init
;;;39     
;;;40         GPIO_InitStructure.GPIO_Pin  = TIM3_CH1 | TIM3_CH2;	
000028  20c0              MOVS     r0,#0xc0
00002a  f8ad0018          STRH     r0,[sp,#0x18]
;;;41     	  GPIO_Init(GPIO_TIM3, &GPIO_InitStructure);	
00002e  a906              ADD      r1,sp,#0x18
000030  4851              LDR      r0,|L1.376|
000032  f7fffffe          BL       GPIO_Init
;;;42     	
;;;43     	  GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;// | GPIO_Pin_1;注意,飞控CH8引脚被超声波占用，没有配置
000036  2001              MOVS     r0,#1
000038  f8ad0018          STRH     r0,[sp,#0x18]
;;;44     	  GPIO_Init(GPIOB, &GPIO_InitStructure);	
00003c  a906              ADD      r1,sp,#0x18
00003e  484f              LDR      r0,|L1.380|
000040  f7fffffe          BL       GPIO_Init
;;;45     
;;;46     	  //初始化定时器2 TIM2	 
;;;47     	  TIM_TimeBaseStructure.TIM_Period = 0XFFFF;                   //设定计数器自动重装值 
000044  f64f70ff          MOV      r0,#0xffff
000048  f8ad0010          STRH     r0,[sp,#0x10]
;;;48     	  TIM_TimeBaseStructure.TIM_Prescaler =71; 	                   //预分频器   
00004c  2047              MOVS     r0,#0x47
00004e  f8ad000c          STRH     r0,[sp,#0xc]
;;;49     	  TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;      //设置时钟分割:TDTS = Tck_tim
000052  2000              MOVS     r0,#0
000054  f8ad0012          STRH     r0,[sp,#0x12]
;;;50     	  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
000058  f8ad000e          STRH     r0,[sp,#0xe]
;;;51     	  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);              //根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位
00005c  a903              ADD      r1,sp,#0xc
00005e  f04f4080          MOV      r0,#0x40000000
000062  f7fffffe          BL       TIM_TimeBaseInit
;;;52         TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); 
000066  a903              ADD      r1,sp,#0xc
000068  4845              LDR      r0,|L1.384|
00006a  f7fffffe          BL       TIM_TimeBaseInit
;;;53     	
;;;54     	  //初始化TIM2输入捕获参数
;;;55     	  TIM2_ICInitStructure.TIM_Channel = TIM_Channel_1;                //CC1S=01 	选择输入端 IC1映射到TI1上
00006e  2000              MOVS     r0,#0
000070  f8ad0000          STRH     r0,[sp,#0]
;;;56       	TIM2_ICInitStructure.TIM_ICPolarity =TIM_ICPolarity_Rising;	   //上升沿捕获
000074  f8ad0002          STRH     r0,[sp,#2]
;;;57       	TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
000078  2001              MOVS     r0,#1
00007a  f8ad0004          STRH     r0,[sp,#4]
;;;58       	TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	         //配置输入分频,不分频 
00007e  2000              MOVS     r0,#0
000080  f8ad0006          STRH     r0,[sp,#6]
;;;59       	TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
000084  f8ad0008          STRH     r0,[sp,#8]
;;;60       	TIM_ICInit(TIM2, &TIM2_ICInitStructure);
000088  4669              MOV      r1,sp
00008a  f04f4080          MOV      r0,#0x40000000
00008e  f7fffffe          BL       TIM_ICInit
;;;61     		TIM_ICInit(TIM3, &TIM2_ICInitStructure);
000092  4669              MOV      r1,sp
000094  483a              LDR      r0,|L1.384|
000096  f7fffffe          BL       TIM_ICInit
;;;62     	
;;;63     	  TIM2_ICInitStructure.TIM_Channel = TIM_Channel_2;                //CC1S=01 	选择输入端 IC1映射到TI1上
00009a  2004              MOVS     r0,#4
00009c  f8ad0000          STRH     r0,[sp,#0]
;;;64       	TIM2_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	   //上升沿捕获
0000a0  2000              MOVS     r0,#0
0000a2  f8ad0002          STRH     r0,[sp,#2]
;;;65       	TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
0000a6  2001              MOVS     r0,#1
0000a8  f8ad0004          STRH     r0,[sp,#4]
;;;66       	TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	         //配置输入分频,不分频 
0000ac  2000              MOVS     r0,#0
0000ae  f8ad0006          STRH     r0,[sp,#6]
;;;67       	TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
0000b2  f8ad0008          STRH     r0,[sp,#8]
;;;68       	TIM_ICInit(TIM2, &TIM2_ICInitStructure);
0000b6  4669              MOV      r1,sp
0000b8  f04f4080          MOV      r0,#0x40000000
0000bc  f7fffffe          BL       TIM_ICInit
;;;69     		TIM_ICInit(TIM3, &TIM2_ICInitStructure);
0000c0  4669              MOV      r1,sp
0000c2  482f              LDR      r0,|L1.384|
0000c4  f7fffffe          BL       TIM_ICInit
;;;70     		
;;;71     		TIM2_ICInitStructure.TIM_Channel = TIM_Channel_3;                //CC1S=01 	选择输入端 IC1映射到TI1上
0000c8  2008              MOVS     r0,#8
0000ca  f8ad0000          STRH     r0,[sp,#0]
;;;72       	TIM2_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	   //上升沿捕获
0000ce  2000              MOVS     r0,#0
0000d0  f8ad0002          STRH     r0,[sp,#2]
;;;73       	TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
0000d4  2001              MOVS     r0,#1
0000d6  f8ad0004          STRH     r0,[sp,#4]
;;;74       	TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	         //配置输入分频,不分频 
0000da  2000              MOVS     r0,#0
0000dc  f8ad0006          STRH     r0,[sp,#6]
;;;75       	TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
0000e0  f8ad0008          STRH     r0,[sp,#8]
;;;76       	TIM_ICInit(TIM2, &TIM2_ICInitStructure);
0000e4  4669              MOV      r1,sp
0000e6  f04f4080          MOV      r0,#0x40000000
0000ea  f7fffffe          BL       TIM_ICInit
;;;77     		TIM_ICInit(TIM3, &TIM2_ICInitStructure);
0000ee  4669              MOV      r1,sp
0000f0  4823              LDR      r0,|L1.384|
0000f2  f7fffffe          BL       TIM_ICInit
;;;78     		
;;;79     		TIM2_ICInitStructure.TIM_Channel = TIM_Channel_4;                //CC1S=01 	选择输入端 IC1映射到TI1上
0000f6  200c              MOVS     r0,#0xc
0000f8  f8ad0000          STRH     r0,[sp,#0]
;;;80       	TIM2_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	   //上升沿捕获
0000fc  2000              MOVS     r0,#0
0000fe  f8ad0002          STRH     r0,[sp,#2]
;;;81       	TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
000102  2001              MOVS     r0,#1
000104  f8ad0004          STRH     r0,[sp,#4]
;;;82       	TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	         //配置输入分频,不分频 
000108  2000              MOVS     r0,#0
00010a  f8ad0006          STRH     r0,[sp,#6]
;;;83       	TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
00010e  f8ad0008          STRH     r0,[sp,#8]
;;;84       	TIM_ICInit(TIM2, &TIM2_ICInitStructure);
000112  4669              MOV      r1,sp
000114  f04f4080          MOV      r0,#0x40000000
000118  f7fffffe          BL       TIM_ICInit
;;;85     		//TIM_ICInit(TIM3, &TIM2_ICInitStructure);
;;;86     
;;;87     	  TIM_Cmd(TIM2,ENABLE ); 
00011c  2101              MOVS     r1,#1
00011e  0788              LSLS     r0,r1,#30
000120  f7fffffe          BL       TIM_Cmd
;;;88     		TIM_Cmd(TIM3,ENABLE );
000124  2101              MOVS     r1,#1
000126  4816              LDR      r0,|L1.384|
000128  f7fffffe          BL       TIM_Cmd
;;;89     		
;;;90     	  TIM_ITConfig(TIM2, TIM_IT_CC1, ENABLE);        //允许更新中断 ,允许CC1IE捕获中断	
00012c  2201              MOVS     r2,#1
00012e  2102              MOVS     r1,#2
000130  0748              LSLS     r0,r1,#29
000132  f7fffffe          BL       TIM_ITConfig
;;;91     	  TIM_ITConfig(TIM2, TIM_IT_CC2, ENABLE);
000136  2201              MOVS     r2,#1
000138  2104              MOVS     r1,#4
00013a  0708              LSLS     r0,r1,#28
00013c  f7fffffe          BL       TIM_ITConfig
;;;92     	  TIM_ITConfig(TIM2, TIM_IT_CC3, ENABLE);
000140  2201              MOVS     r2,#1
000142  2108              MOVS     r1,#8
000144  06c8              LSLS     r0,r1,#27
000146  f7fffffe          BL       TIM_ITConfig
;;;93     	  TIM_ITConfig(TIM2, TIM_IT_CC4, ENABLE);	
00014a  2201              MOVS     r2,#1
00014c  2110              MOVS     r1,#0x10
00014e  0688              LSLS     r0,r1,#26
000150  f7fffffe          BL       TIM_ITConfig
;;;94     		
;;;95     		TIM_ITConfig(TIM3, TIM_IT_CC1, ENABLE);        //允许更新中断 ,允许CC1IE捕获中断	
000154  2201              MOVS     r2,#1
000156  2102              MOVS     r1,#2
000158  4809              LDR      r0,|L1.384|
00015a  f7fffffe          BL       TIM_ITConfig
;;;96     	  TIM_ITConfig(TIM3, TIM_IT_CC2, ENABLE);
00015e  2201              MOVS     r2,#1
000160  2104              MOVS     r1,#4
000162  4807              LDR      r0,|L1.384|
000164  f7fffffe          BL       TIM_ITConfig
;;;97     		TIM_ITConfig(TIM3, TIM_IT_CC3, ENABLE);
000168  2201              MOVS     r2,#1
00016a  2108              MOVS     r1,#8
00016c  4804              LDR      r0,|L1.384|
00016e  f7fffffe          BL       TIM_ITConfig
;;;98     		//TIM_ITConfig(TIM3, TIM_IT_CC4, ENABLE);
;;;99     }
000172  b007              ADD      sp,sp,#0x1c
000174  bd00              POP      {pc}
;;;100    /*====================================================================================================*/
                          ENDP

000176  0000              DCW      0x0000
                  |L1.376|
                          DCD      0x40010800
                  |L1.380|
                          DCD      0x40010c00
                  |L1.384|
                          DCD      0x40000400

                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM2_IRQHandler PROC
;;;108    /*====================================================================================================*/
;;;109    void TIM2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;110    { 
;;;111        if (TIM_GetITStatus(TIM2, TIM_IT_CC1) != RESET)   //捕获1发生捕获事件
000002  2102              MOVS     r1,#2
000004  0748              LSLS     r0,r1,#29
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b370              CBZ      r0,|L2.106|
;;;112    		{	
;;;113    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC1); //清除中断标志位
00000c  2102              MOVS     r1,#2
00000e  0748              LSLS     r0,r1,#29
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;114    			if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH1) == 1) 
000014  2101              MOVS     r1,#1
000016  4873              LDR      r0,|L2.484|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  2801              CMP      r0,#1
00001e  d10a              BNE      |L2.54|
;;;115    			{
;;;116    				  TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000020  2102              MOVS     r1,#2
000022  0780              LSLS     r0,r0,#30
000024  f7fffffe          BL       TIM_OC1PolarityConfig
;;;117              Rise[0]=TIM_GetCapture1(TIM2);
000028  f04f4080          MOV      r0,#0x40000000
00002c  f7fffffe          BL       TIM_GetCapture1
000030  496d              LDR      r1,|L2.488|
000032  8008              STRH     r0,[r1,#0]
000034  e021              B        |L2.122|
                  |L2.54|
;;;118          }
;;;119    			else 
;;;120    			{
;;;121    				  TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
000036  2100              MOVS     r1,#0
000038  f04f4080          MOV      r0,#0x40000000
00003c  f7fffffe          BL       TIM_OC1PolarityConfig
;;;122              Drop[0]=TIM_GetCapture1(TIM2);
000040  f04f4080          MOV      r0,#0x40000000
000044  f7fffffe          BL       TIM_GetCapture1
000048  4968              LDR      r1,|L2.492|
00004a  8008              STRH     r0,[r1,#0]
;;;123    				  if(Rise[0]>Drop[0])  RC_Pwm_In[0] = 65535-Rise[0] + Drop[0];
00004c  4866              LDR      r0,|L2.488|
00004e  8800              LDRH     r0,[r0,#0]  ; Rise
000050  8809              LDRH     r1,[r1,#0]  ; Drop
000052  4288              CMP      r0,r1
000054  dd0a              BLE      |L2.108|
000056  4864              LDR      r0,|L2.488|
000058  8800              LDRH     r0,[r0,#0]  ; Rise
00005a  f64f71ff          MOV      r1,#0xffff
00005e  1a08              SUBS     r0,r1,r0
000060  4962              LDR      r1,|L2.492|
000062  8809              LDRH     r1,[r1,#0]  ; Drop
000064  4408              ADD      r0,r0,r1
000066  4962              LDR      r1,|L2.496|
000068  8008              STRH     r0,[r1,#0]
                  |L2.106|
00006a  e006              B        |L2.122|
                  |L2.108|
;;;124    					else 	               RC_Pwm_In[0] = Drop[0] - Rise[0];
00006c  485f              LDR      r0,|L2.492|
00006e  8800              LDRH     r0,[r0,#0]  ; Drop
000070  495d              LDR      r1,|L2.488|
000072  8809              LDRH     r1,[r1,#0]  ; Rise
000074  1a40              SUBS     r0,r0,r1
000076  495e              LDR      r1,|L2.496|
000078  8008              STRH     r0,[r1,#0]
                  |L2.122|
;;;125          }			
;;;126    		}	
;;;127    	  
;;;128    		if (TIM_GetITStatus(TIM2, TIM_IT_CC2) != RESET)   //捕获2发生捕获事件
00007a  2104              MOVS     r1,#4
00007c  0708              LSLS     r0,r1,#28
00007e  f7fffffe          BL       TIM_GetITStatus
000082  b370              CBZ      r0,|L2.226|
;;;129    		{	
;;;130    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC2); //清除中断标志位
000084  2104              MOVS     r1,#4
000086  0708              LSLS     r0,r1,#28
000088  f7fffffe          BL       TIM_ClearITPendingBit
;;;131    			if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH2) == 1) 
00008c  2102              MOVS     r1,#2
00008e  4855              LDR      r0,|L2.484|
000090  f7fffffe          BL       GPIO_ReadInputDataBit
000094  2801              CMP      r0,#1
000096  d10a              BNE      |L2.174|
;;;132    			{
;;;133    				  TIM_OC2PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000098  2102              MOVS     r1,#2
00009a  0780              LSLS     r0,r0,#30
00009c  f7fffffe          BL       TIM_OC2PolarityConfig
;;;134              Rise[1]=TIM_GetCapture2(TIM2);
0000a0  f04f4080          MOV      r0,#0x40000000
0000a4  f7fffffe          BL       TIM_GetCapture2
0000a8  494f              LDR      r1,|L2.488|
0000aa  8048              STRH     r0,[r1,#2]
0000ac  e021              B        |L2.242|
                  |L2.174|
;;;135          }
;;;136    			else 
;;;137    			{
;;;138    				  TIM_OC2PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
0000ae  2100              MOVS     r1,#0
0000b0  f04f4080          MOV      r0,#0x40000000
0000b4  f7fffffe          BL       TIM_OC2PolarityConfig
;;;139              Drop[1]=TIM_GetCapture2(TIM2);
0000b8  f04f4080          MOV      r0,#0x40000000
0000bc  f7fffffe          BL       TIM_GetCapture2
0000c0  494a              LDR      r1,|L2.492|
0000c2  8048              STRH     r0,[r1,#2]
;;;140    				  if(Rise[1]>Drop[1])  RC_Pwm_In[1] = 65535-Rise[1] + Drop[1];
0000c4  4848              LDR      r0,|L2.488|
0000c6  8840              LDRH     r0,[r0,#2]  ; Rise
0000c8  8849              LDRH     r1,[r1,#2]  ; Drop
0000ca  4288              CMP      r0,r1
0000cc  dd0a              BLE      |L2.228|
0000ce  4846              LDR      r0,|L2.488|
0000d0  8840              LDRH     r0,[r0,#2]  ; Rise
0000d2  f64f71ff          MOV      r1,#0xffff
0000d6  1a08              SUBS     r0,r1,r0
0000d8  4944              LDR      r1,|L2.492|
0000da  8849              LDRH     r1,[r1,#2]  ; Drop
0000dc  4408              ADD      r0,r0,r1
0000de  4944              LDR      r1,|L2.496|
0000e0  8048              STRH     r0,[r1,#2]
                  |L2.226|
0000e2  e006              B        |L2.242|
                  |L2.228|
;;;141    					else 	               RC_Pwm_In[1] = Drop[1] - Rise[1];
0000e4  4841              LDR      r0,|L2.492|
0000e6  8840              LDRH     r0,[r0,#2]  ; Drop
0000e8  493f              LDR      r1,|L2.488|
0000ea  8849              LDRH     r1,[r1,#2]  ; Rise
0000ec  1a40              SUBS     r0,r0,r1
0000ee  4940              LDR      r1,|L2.496|
0000f0  8048              STRH     r0,[r1,#2]
                  |L2.242|
;;;142          }			
;;;143    		}	
;;;144    		
;;;145        if (TIM_GetITStatus(TIM2, TIM_IT_CC3) != RESET)            //捕获3发生捕获事件
0000f2  2108              MOVS     r1,#8
0000f4  06c8              LSLS     r0,r1,#27
0000f6  f7fffffe          BL       TIM_GetITStatus
0000fa  b370              CBZ      r0,|L2.346|
;;;146    		{	
;;;147    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC3); //清除中断标志位
0000fc  2108              MOVS     r1,#8
0000fe  06c8              LSLS     r0,r1,#27
000100  f7fffffe          BL       TIM_ClearITPendingBit
;;;148    			if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH3) == 1) 
000104  2104              MOVS     r1,#4
000106  4837              LDR      r0,|L2.484|
000108  f7fffffe          BL       GPIO_ReadInputDataBit
00010c  2801              CMP      r0,#1
00010e  d10a              BNE      |L2.294|
;;;149    			{
;;;150    				  TIM_OC3PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000110  2102              MOVS     r1,#2
000112  0780              LSLS     r0,r0,#30
000114  f7fffffe          BL       TIM_OC3PolarityConfig
;;;151              Rise[2]=TIM_GetCapture3(TIM2);
000118  f04f4080          MOV      r0,#0x40000000
00011c  f7fffffe          BL       TIM_GetCapture3
000120  4931              LDR      r1,|L2.488|
000122  8088              STRH     r0,[r1,#4]
000124  e021              B        |L2.362|
                  |L2.294|
;;;152          }
;;;153    			else 
;;;154    			{
;;;155    				  TIM_OC3PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
000126  2100              MOVS     r1,#0
000128  f04f4080          MOV      r0,#0x40000000
00012c  f7fffffe          BL       TIM_OC3PolarityConfig
;;;156              Drop[2]=TIM_GetCapture3(TIM2);
000130  f04f4080          MOV      r0,#0x40000000
000134  f7fffffe          BL       TIM_GetCapture3
000138  492c              LDR      r1,|L2.492|
00013a  8088              STRH     r0,[r1,#4]
;;;157    				  if(Rise[2]>Drop[2]) RC_Pwm_In[2] = 65535-Rise[2] + Drop[2];
00013c  482a              LDR      r0,|L2.488|
00013e  8880              LDRH     r0,[r0,#4]  ; Rise
000140  8889              LDRH     r1,[r1,#4]  ; Drop
000142  4288              CMP      r0,r1
000144  dd0a              BLE      |L2.348|
000146  4828              LDR      r0,|L2.488|
000148  8880              LDRH     r0,[r0,#4]  ; Rise
00014a  f64f71ff          MOV      r1,#0xffff
00014e  1a08              SUBS     r0,r1,r0
000150  4926              LDR      r1,|L2.492|
000152  8889              LDRH     r1,[r1,#4]  ; Drop
000154  4408              ADD      r0,r0,r1
000156  4926              LDR      r1,|L2.496|
000158  8088              STRH     r0,[r1,#4]
                  |L2.346|
00015a  e006              B        |L2.362|
                  |L2.348|
;;;158    					else 	              RC_Pwm_In[2] = Drop[2] - Rise[2];
00015c  4823              LDR      r0,|L2.492|
00015e  8880              LDRH     r0,[r0,#4]  ; Drop
000160  4921              LDR      r1,|L2.488|
000162  8889              LDRH     r1,[r1,#4]  ; Rise
000164  1a40              SUBS     r0,r0,r1
000166  4922              LDR      r1,|L2.496|
000168  8088              STRH     r0,[r1,#4]
                  |L2.362|
;;;159          }	 
;;;160    		}	
;;;161    
;;;162        if (TIM_GetITStatus(TIM2, TIM_IT_CC4) != RESET)            //捕获4发生捕获事件
00016a  2110              MOVS     r1,#0x10
00016c  0688              LSLS     r0,r1,#26
00016e  f7fffffe          BL       TIM_GetITStatus
000172  b370              CBZ      r0,|L2.466|
;;;163    		{	
;;;164    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC4); //清除中断标志位
000174  2110              MOVS     r1,#0x10
000176  0688              LSLS     r0,r1,#26
000178  f7fffffe          BL       TIM_ClearITPendingBit
;;;165    		  if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH4) == 1) 
00017c  2108              MOVS     r1,#8
00017e  4819              LDR      r0,|L2.484|
000180  f7fffffe          BL       GPIO_ReadInputDataBit
000184  2801              CMP      r0,#1
000186  d10a              BNE      |L2.414|
;;;166    			{
;;;167    				  TIM_OC4PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000188  2102              MOVS     r1,#2
00018a  0780              LSLS     r0,r0,#30
00018c  f7fffffe          BL       TIM_OC4PolarityConfig
;;;168              Rise[3]=TIM_GetCapture4(TIM2);
000190  f04f4080          MOV      r0,#0x40000000
000194  f7fffffe          BL       TIM_GetCapture4
000198  4913              LDR      r1,|L2.488|
00019a  80c8              STRH     r0,[r1,#6]
00019c  e021              B        |L2.482|
                  |L2.414|
;;;169          }
;;;170    			else 
;;;171    			{
;;;172    				  TIM_OC4PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
00019e  2100              MOVS     r1,#0
0001a0  f04f4080          MOV      r0,#0x40000000
0001a4  f7fffffe          BL       TIM_OC4PolarityConfig
;;;173              Drop[3]=TIM_GetCapture4(TIM2);
0001a8  f04f4080          MOV      r0,#0x40000000
0001ac  f7fffffe          BL       TIM_GetCapture4
0001b0  490e              LDR      r1,|L2.492|
0001b2  80c8              STRH     r0,[r1,#6]
;;;174    				  if(Rise[3]>Drop[3])  RC_Pwm_In[3] = 65535-Rise[3] + Drop[3];
0001b4  480c              LDR      r0,|L2.488|
0001b6  88c0              LDRH     r0,[r0,#6]  ; Rise
0001b8  88c9              LDRH     r1,[r1,#6]  ; Drop
0001ba  4288              CMP      r0,r1
0001bc  dd0a              BLE      |L2.468|
0001be  480a              LDR      r0,|L2.488|
0001c0  88c0              LDRH     r0,[r0,#6]  ; Rise
0001c2  f64f71ff          MOV      r1,#0xffff
0001c6  1a08              SUBS     r0,r1,r0
0001c8  4908              LDR      r1,|L2.492|
0001ca  88c9              LDRH     r1,[r1,#6]  ; Drop
0001cc  4408              ADD      r0,r0,r1
0001ce  4908              LDR      r1,|L2.496|
0001d0  80c8              STRH     r0,[r1,#6]
                  |L2.466|
0001d2  e006              B        |L2.482|
                  |L2.468|
;;;175    					else 	               RC_Pwm_In[3] = Drop[3] - Rise[3];
0001d4  4805              LDR      r0,|L2.492|
0001d6  88c0              LDRH     r0,[r0,#6]  ; Drop
0001d8  4903              LDR      r1,|L2.488|
0001da  88c9              LDRH     r1,[r1,#6]  ; Rise
0001dc  1a40              SUBS     r0,r0,r1
0001de  4904              LDR      r1,|L2.496|
0001e0  80c8              STRH     r0,[r1,#6]
                  |L2.482|
;;;176          }	  
;;;177    		}		
;;;178    }
0001e2  bd10              POP      {r4,pc}
;;;179    
                          ENDP

                  |L2.484|
                          DCD      0x40010800
                  |L2.488|
                          DCD      Rise
                  |L2.492|
                          DCD      Drop
                  |L2.496|
                          DCD      RC_Pwm_In

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;195    /*====================================================================================================*/
;;;196    void TIM3_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;197    { 
;;;198        if (TIM_GetITStatus(TIM3, TIM_IT_CC1) != RESET)   //捕获1发生捕获事件
000002  2102              MOVS     r1,#2
000004  4879              LDR      r0,|L3.492|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b358              CBZ      r0,|L3.100|
;;;199    		{	
;;;200    			TIM_ClearITPendingBit(TIM3, TIM_IT_CC1); //清除中断标志位
00000c  2102              MOVS     r1,#2
00000e  4877              LDR      r0,|L3.492|
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;201    			if(GPIO_ReadInputDataBit(GPIO_TIM3,TIM3_CH1) == 1) 
000014  2140              MOVS     r1,#0x40
000016  4876              LDR      r0,|L3.496|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  2801              CMP      r0,#1
00001e  d109              BNE      |L3.52|
;;;202    			{
;;;203    				  TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000020  2102              MOVS     r1,#2
000022  4872              LDR      r0,|L3.492|
000024  f7fffffe          BL       TIM_OC1PolarityConfig
;;;204              Rise[4]=TIM_GetCapture1(TIM3);
000028  4870              LDR      r0,|L3.492|
00002a  f7fffffe          BL       TIM_GetCapture1
00002e  4971              LDR      r1,|L3.500|
000030  8108              STRH     r0,[r1,#8]
000032  e01f              B        |L3.116|
                  |L3.52|
;;;205          }
;;;206    			else 
;;;207    			{
;;;208    				  TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
000034  2100              MOVS     r1,#0
000036  486d              LDR      r0,|L3.492|
000038  f7fffffe          BL       TIM_OC1PolarityConfig
;;;209              Drop[4]=TIM_GetCapture1(TIM3);
00003c  486b              LDR      r0,|L3.492|
00003e  f7fffffe          BL       TIM_GetCapture1
000042  496d              LDR      r1,|L3.504|
000044  8108              STRH     r0,[r1,#8]
;;;210    				  if(Rise[4]>Drop[4])  RC_Pwm_In[4] = 65535-Rise[4] + Drop[4];
000046  486b              LDR      r0,|L3.500|
000048  8900              LDRH     r0,[r0,#8]  ; Rise
00004a  8909              LDRH     r1,[r1,#8]  ; Drop
00004c  4288              CMP      r0,r1
00004e  dd0a              BLE      |L3.102|
000050  4868              LDR      r0,|L3.500|
000052  8900              LDRH     r0,[r0,#8]  ; Rise
000054  f64f71ff          MOV      r1,#0xffff
000058  1a08              SUBS     r0,r1,r0
00005a  4967              LDR      r1,|L3.504|
00005c  8909              LDRH     r1,[r1,#8]  ; Drop
00005e  4408              ADD      r0,r0,r1
000060  4966              LDR      r1,|L3.508|
000062  8108              STRH     r0,[r1,#8]
                  |L3.100|
000064  e006              B        |L3.116|
                  |L3.102|
;;;211    					else 	               RC_Pwm_In[4] = Drop[4] - Rise[4];
000066  4864              LDR      r0,|L3.504|
000068  8900              LDRH     r0,[r0,#8]  ; Drop
00006a  4962              LDR      r1,|L3.500|
00006c  8909              LDRH     r1,[r1,#8]  ; Rise
00006e  1a40              SUBS     r0,r0,r1
000070  4962              LDR      r1,|L3.508|
000072  8108              STRH     r0,[r1,#8]
                  |L3.116|
;;;212          }			
;;;213    		}	
;;;214    	  
;;;215    		if (TIM_GetITStatus(TIM3, TIM_IT_CC2) != RESET)   //捕获2发生捕获事件
000074  2104              MOVS     r1,#4
000076  485d              LDR      r0,|L3.492|
000078  f7fffffe          BL       TIM_GetITStatus
00007c  b358              CBZ      r0,|L3.214|
;;;216    		{	
;;;217    			TIM_ClearITPendingBit(TIM3, TIM_IT_CC2); //清除中断标志位
00007e  2104              MOVS     r1,#4
000080  485a              LDR      r0,|L3.492|
000082  f7fffffe          BL       TIM_ClearITPendingBit
;;;218    			if(GPIO_ReadInputDataBit(GPIO_TIM3,TIM3_CH2) == 1) 
000086  2180              MOVS     r1,#0x80
000088  4859              LDR      r0,|L3.496|
00008a  f7fffffe          BL       GPIO_ReadInputDataBit
00008e  2801              CMP      r0,#1
000090  d109              BNE      |L3.166|
;;;219    			{
;;;220    				  TIM_OC2PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000092  2102              MOVS     r1,#2
000094  4855              LDR      r0,|L3.492|
000096  f7fffffe          BL       TIM_OC2PolarityConfig
;;;221              Rise[5]=TIM_GetCapture2(TIM3);
00009a  4854              LDR      r0,|L3.492|
00009c  f7fffffe          BL       TIM_GetCapture2
0000a0  4954              LDR      r1,|L3.500|
0000a2  8148              STRH     r0,[r1,#0xa]
0000a4  e01f              B        |L3.230|
                  |L3.166|
;;;222          }
;;;223    			else 
;;;224    			{
;;;225    				  TIM_OC2PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
0000a6  2100              MOVS     r1,#0
0000a8  4850              LDR      r0,|L3.492|
0000aa  f7fffffe          BL       TIM_OC2PolarityConfig
;;;226              Drop[5]=TIM_GetCapture2(TIM3);
0000ae  484f              LDR      r0,|L3.492|
0000b0  f7fffffe          BL       TIM_GetCapture2
0000b4  4950              LDR      r1,|L3.504|
0000b6  8148              STRH     r0,[r1,#0xa]
;;;227    				  if(Rise[5]>Drop[5])  RC_Pwm_In[5] = 65535-Rise[5] + Drop[5];
0000b8  484e              LDR      r0,|L3.500|
0000ba  8940              LDRH     r0,[r0,#0xa]  ; Rise
0000bc  8949              LDRH     r1,[r1,#0xa]  ; Drop
0000be  4288              CMP      r0,r1
0000c0  dd0a              BLE      |L3.216|
0000c2  484c              LDR      r0,|L3.500|
0000c4  8940              LDRH     r0,[r0,#0xa]  ; Rise
0000c6  f64f71ff          MOV      r1,#0xffff
0000ca  1a08              SUBS     r0,r1,r0
0000cc  494a              LDR      r1,|L3.504|
0000ce  8949              LDRH     r1,[r1,#0xa]  ; Drop
0000d0  4408              ADD      r0,r0,r1
0000d2  494a              LDR      r1,|L3.508|
0000d4  8148              STRH     r0,[r1,#0xa]
                  |L3.214|
0000d6  e006              B        |L3.230|
                  |L3.216|
;;;228    					else 	               RC_Pwm_In[5] = Drop[5] - Rise[5];
0000d8  4847              LDR      r0,|L3.504|
0000da  8940              LDRH     r0,[r0,#0xa]  ; Drop
0000dc  4945              LDR      r1,|L3.500|
0000de  8949              LDRH     r1,[r1,#0xa]  ; Rise
0000e0  1a40              SUBS     r0,r0,r1
0000e2  4946              LDR      r1,|L3.508|
0000e4  8148              STRH     r0,[r1,#0xa]
                  |L3.230|
;;;229          }			
;;;230    		}	
;;;231    		   		
;;;232    	  if (TIM_GetITStatus(TIM3, TIM_IT_CC3) != RESET)   //捕获3发生捕获事件
0000e6  2108              MOVS     r1,#8
0000e8  4840              LDR      r0,|L3.492|
0000ea  f7fffffe          BL       TIM_GetITStatus
0000ee  2800              CMP      r0,#0
0000f0  d07a              BEQ      |L3.488|
;;;233    		{	
;;;234    			TIM_ClearITPendingBit(TIM3, TIM_IT_CC3); //清除中断标志位
0000f2  2108              MOVS     r1,#8
0000f4  483d              LDR      r0,|L3.492|
0000f6  f7fffffe          BL       TIM_ClearITPendingBit
;;;235    			if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0) == 1) 
0000fa  2101              MOVS     r1,#1
0000fc  4840              LDR      r0,|L3.512|
0000fe  f7fffffe          BL       GPIO_ReadInputDataBit
000102  2801              CMP      r0,#1
000104  d109              BNE      |L3.282|
;;;236    			{
;;;237    				TIM_OC3PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000106  2102              MOVS     r1,#2
000108  4838              LDR      r0,|L3.492|
00010a  f7fffffe          BL       TIM_OC3PolarityConfig
;;;238    				Rise[6]=TIM_GetCapture3(TIM3);
00010e  4837              LDR      r0,|L3.492|
000110  f7fffffe          BL       TIM_GetCapture3
000114  4937              LDR      r1,|L3.500|
000116  8188              STRH     r0,[r1,#0xc]
000118  e066              B        |L3.488|
                  |L3.282|
;;;239          }
;;;240    			else 
;;;241    			{
;;;242    				TIM_OC3PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
00011a  2100              MOVS     r1,#0
00011c  4833              LDR      r0,|L3.492|
00011e  f7fffffe          BL       TIM_OC3PolarityConfig
;;;243    				Drop[6]=TIM_GetCapture3(TIM3);
000122  4832              LDR      r0,|L3.492|
000124  f7fffffe          BL       TIM_GetCapture3
000128  4933              LDR      r1,|L3.504|
00012a  8188              STRH     r0,[r1,#0xc]
;;;244    				if(Rise[6]>Drop[6])  US100_Alt_Temp = 65535-Rise[6] + Drop[6];
00012c  4831              LDR      r0,|L3.500|
00012e  8980              LDRH     r0,[r0,#0xc]  ; Rise
000130  8989              LDRH     r1,[r1,#0xc]  ; Drop
000132  4288              CMP      r0,r1
000134  dd0a              BLE      |L3.332|
000136  482f              LDR      r0,|L3.500|
000138  8980              LDRH     r0,[r0,#0xc]  ; Rise
00013a  f64f71ff          MOV      r1,#0xffff
00013e  1a08              SUBS     r0,r1,r0
000140  492d              LDR      r1,|L3.504|
000142  8989              LDRH     r1,[r1,#0xc]  ; Drop
000144  4408              ADD      r0,r0,r1
000146  492f              LDR      r1,|L3.516|
000148  8008              STRH     r0,[r1,#0]
00014a  e006              B        |L3.346|
                  |L3.332|
;;;245    				else 	               US100_Alt_Temp = Drop[6] - Rise[6];
00014c  482a              LDR      r0,|L3.504|
00014e  8980              LDRH     r0,[r0,#0xc]  ; Drop
000150  4928              LDR      r1,|L3.500|
000152  8989              LDRH     r1,[r1,#0xc]  ; Rise
000154  1a40              SUBS     r0,r0,r1
000156  492b              LDR      r1,|L3.516|
000158  8008              STRH     r0,[r1,#0]
                  |L3.346|
;;;246    			
;;;247    				if(US100_Alt_Temp>20000)   US100_Alt_Temp=Alt_Last; 
00015a  482a              LDR      r0,|L3.516|
00015c  8800              LDRH     r0,[r0,#0]  ; US100_Alt_Temp
00015e  f6446120          MOV      r1,#0x4e20
000162  4288              CMP      r0,r1
000164  dd04              BLE      |L3.368|
000166  4828              LDR      r0,|L3.520|
000168  8800              LDRH     r0,[r0,#0]  ; Alt_Last
00016a  4926              LDR      r1,|L3.516|
00016c  8008              STRH     r0,[r1,#0]
00016e  e003              B        |L3.376|
                  |L3.368|
;;;248    				else    					          Alt_Last=US100_Alt_Temp; 
000170  4824              LDR      r0,|L3.516|
000172  8800              LDRH     r0,[r0,#0]  ; US100_Alt_Temp
000174  4924              LDR      r1,|L3.520|
000176  8008              STRH     r0,[r1,#0]
                  |L3.376|
;;;249    
;;;250    				US100_Alt=US100_Alt_Temp*34/200;//这里只是获得高度，不做处理了,优化时可以加入倾角补偿
000178  4822              LDR      r0,|L3.516|
00017a  8800              LDRH     r0,[r0,#0]  ; US100_Alt_Temp
00017c  eb001000          ADD      r0,r0,r0,LSL #4
000180  0040              LSLS     r0,r0,#1
000182  21c8              MOVS     r1,#0xc8
000184  fb90f4f1          SDIV     r4,r0,r1
000188  4620              MOV      r0,r4
00018a  f7fffffe          BL       __aeabi_i2f
00018e  491f              LDR      r1,|L3.524|
000190  6008              STR      r0,[r1,#0]  ; US100_Alt
;;;251    				ultra_start_f=1; 
000192  2001              MOVS     r0,#1
000194  491e              LDR      r1,|L3.528|
000196  7008              STRB     r0,[r1,#0]
;;;252    
;;;253    				//以下是防止异常的情况，及时保护，因为超出超声波测距范围后，数据会突然变成很小，比如11.084，并基本保持不动
;;;254    				if(abs(US100_Alt-US100_Alt_Last)>=500){
000198  481e              LDR      r0,|L3.532|
00019a  6801              LDR      r1,[r0,#0]  ; US100_Alt_Last
00019c  481b              LDR      r0,|L3.524|
00019e  6800              LDR      r0,[r0,#0]  ; US100_Alt
0001a0  f7fffffe          BL       __aeabi_fsub
0001a4  4605              MOV      r5,r0
0001a6  f7fffffe          BL       __aeabi_f2iz
0001aa  1e04              SUBS     r4,r0,#0
0001ac  db01              BLT      |L3.434|
0001ae  4620              MOV      r0,r4
0001b0  e000              B        |L3.436|
                  |L3.434|
0001b2  4260              RSBS     r0,r4,#0
                  |L3.436|
0001b4  f5b07ffa          CMP      r0,#0x1f4
0001b8  db07              BLT      |L3.458|
;;;255    					US100_Alt=US100_Alt_Last;
0001ba  4816              LDR      r0,|L3.532|
0001bc  6800              LDR      r0,[r0,#0]  ; US100_Alt_Last
0001be  4913              LDR      r1,|L3.524|
0001c0  6008              STR      r0,[r1,#0]  ; US100_Alt
;;;256    					Ultrasonic_OK=0;
0001c2  2000              MOVS     r0,#0
0001c4  4914              LDR      r1,|L3.536|
0001c6  7008              STRB     r0,[r1,#0]
0001c8  e002              B        |L3.464|
                  |L3.458|
;;;257    				}
;;;258    				else Ultrasonic_OK=1;
0001ca  2001              MOVS     r0,#1
0001cc  4912              LDR      r1,|L3.536|
0001ce  7008              STRB     r0,[r1,#0]
                  |L3.464|
;;;259    				
;;;260    			  US100_Alt_delta=US100_Alt-US100_Alt_Last;
0001d0  4810              LDR      r0,|L3.532|
0001d2  6801              LDR      r1,[r0,#0]  ; US100_Alt_Last
0001d4  480d              LDR      r0,|L3.524|
0001d6  6800              LDR      r0,[r0,#0]  ; US100_Alt
0001d8  f7fffffe          BL       __aeabi_fsub
0001dc  490f              LDR      r1,|L3.540|
0001de  6008              STR      r0,[r1,#0]  ; US100_Alt_delta
;;;261    				US100_Alt_Last=US100_Alt; 
0001e0  480a              LDR      r0,|L3.524|
0001e2  6800              LDR      r0,[r0,#0]  ; US100_Alt
0001e4  490b              LDR      r1,|L3.532|
0001e6  6008              STR      r0,[r1,#0]  ; US100_Alt_Last
                  |L3.488|
;;;262         }	
;;;263    		}
;;;264    		
;;;265    		
;;;266    /*****************************************以下引脚被超声波占用***************************************/
;;;267    		
;;;268    //		  if (TIM_GetITStatus(TIM3, TIM_IT_CC4) != RESET)   //捕获4发生捕获事件
;;;269    //      {	
;;;270    //           TIM_ClearITPendingBit(TIM3, TIM_IT_CC4); //清除中断标志位
;;;271    //           if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_1) == 1) 
;;;272    //           {
;;;273    //                 TIM_OC4PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
;;;274    //                 Rise[7]=TIM_GetCapture4(TIM3);
;;;275    //            }
;;;276    //           else 
;;;277    //           {
;;;278    //                 TIM_OC4PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
;;;279    //                 Drop[7]=TIM_GetCapture4(TIM3);
;;;280    //                 if(Rise[7]>Drop[7])  RC_Pwm_In[7] = 65535-Rise[7] + Drop[7];
;;;281    //                   else 	            RC_Pwm_In[7] = Drop[7] - Rise[7];
;;;282    //           }			
;;;283    //       }	
;;;284    }
0001e8  bd70              POP      {r4-r6,pc}
;;;285    
                          ENDP

0001ea  0000              DCW      0x0000
                  |L3.492|
                          DCD      0x40000400
                  |L3.496|
                          DCD      0x40010800
                  |L3.500|
                          DCD      Rise
                  |L3.504|
                          DCD      Drop
                  |L3.508|
                          DCD      RC_Pwm_In
                  |L3.512|
                          DCD      0x40010c00
                  |L3.516|
                          DCD      US100_Alt_Temp
                  |L3.520|
                          DCD      Alt_Last
                  |L3.524|
                          DCD      US100_Alt
                  |L3.528|
                          DCD      ultra_start_f
                  |L3.532|
                          DCD      US100_Alt_Last
                  |L3.536|
                          DCD      Ultrasonic_OK
                  |L3.540|
                          DCD      US100_Alt_delta

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  Rise
                          %        16
                  Drop
                          %        16
                  RC_Pwm_In
                          %        16
                  RC_Pwm_In_his
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  US100_Alt_Temp
000000  0000              DCW      0x0000
                  Alt_Last
000002  0000              DCW      0x0000
                  Alt_CuntTmep1
000004  00000000          DCFS     0x00000000 ; 0
                  Alt_CuntTmep2
000008  00000000          DCFS     0x00000000 ; 0
                  Alt_V_CuntTmep1
00000c  00000000          DCFS     0x00000000 ; 0
                  Alt_V_CuntTmep2
000010  00000000          DCFS     0x00000000 ; 0
                  US100_Alt_Last
000014  00000000          DCFS     0x00000000 ; 0
                  ultra_start_f
000018  00                DCB      0x00
