; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\mpu6050.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\mpu6050.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\GPS -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Heigh -I..\..\User\Algorithm\ekf2 -IC:\__Electronic_Projects\STM32\HT_Hawk_0528_1\Project\MDK-ARM(uV5)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\mpu6050.crf ..\..\User\Modules\Modules_mpu6050\mpu6050.c]
                          THUMB

                          AREA ||i.Accl_OFFSET||, CODE, READONLY, ALIGN=2

                  Accl_OFFSET PROC
;;;171    /*====================================================================================================*/
;;;172    void Accl_OFFSET(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;173    {
;;;174    	int32_t	tempax=0,tempay=0,tempaz=0;
000004  2500              MOVS     r5,#0
000006  2600              MOVS     r6,#0
000008  2700              MOVS     r7,#0
;;;175    	uint8_t cnt_a=0;
00000a  2400              MOVS     r4,#0
;;;176    	sensor.acc.quiet.x = 0;
00000c  2000              MOVS     r0,#0
00000e  4918              LDR      r1,|L1.112|
000010  8408              STRH     r0,[r1,#0x20]
;;;177    	sensor.acc.quiet.y = 0;
000012  2100              MOVS     r1,#0
000014  4816              LDR      r0,|L1.112|
000016  8441              STRH     r1,[r0,#0x22]
;;;178    	sensor.acc.quiet.z = 0;
000018  8481              STRH     r1,[r0,#0x24]
;;;179    	
;;;180    	for(cnt_a=0;cnt_a<200;cnt_a++)
00001a  bf00              NOP      
00001c  e00f              B        |L1.62|
                  |L1.30|
;;;181    	{
;;;182    		tempax+= sensor.acc.origin.x;
00001e  4814              LDR      r0,|L1.112|
000020  f9b00000          LDRSH    r0,[r0,#0]  ; sensor
000024  4405              ADD      r5,r5,r0
;;;183    		tempay+= sensor.acc.origin.y;
000026  4812              LDR      r0,|L1.112|
000028  f9b00002          LDRSH    r0,[r0,#2]  ; sensor
00002c  4406              ADD      r6,r6,r0
;;;184    		tempaz+= sensor.acc.origin.z;
00002e  4810              LDR      r0,|L1.112|
000030  f9b00004          LDRSH    r0,[r0,#4]  ; sensor
000034  4407              ADD      r7,r7,r0
;;;185    		cnt_a++;
000036  1c60              ADDS     r0,r4,#1
000038  b2c4              UXTB     r4,r0
00003a  1c60              ADDS     r0,r4,#1              ;180
00003c  b2c4              UXTB     r4,r0                 ;180
                  |L1.62|
00003e  2cc8              CMP      r4,#0xc8              ;180
000040  dbed              BLT      |L1.30|
;;;186    	}
;;;187    	sensor.acc.quiet.x = tempax/cnt_a;
000042  fb95f0f4          SDIV     r0,r5,r4
000046  b200              SXTH     r0,r0
000048  4909              LDR      r1,|L1.112|
00004a  8408              STRH     r0,[r1,#0x20]
;;;188    	sensor.acc.quiet.y = tempay/cnt_a;
00004c  fb96f0f4          SDIV     r0,r6,r4
000050  b201              SXTH     r1,r0
000052  4807              LDR      r0,|L1.112|
000054  8441              STRH     r1,[r0,#0x22]
;;;189    	sensor.acc.quiet.z = tempaz/cnt_a;
000056  fb97f0f4          SDIV     r0,r7,r4
00005a  b201              SXTH     r1,r0
00005c  4804              LDR      r0,|L1.112|
00005e  8481              STRH     r1,[r0,#0x24]
;;;190    	cnt_a = 0;
000060  2400              MOVS     r4,#0
;;;191    	flag.calibratingA = 0;
000062  2000              MOVS     r0,#0
000064  4903              LDR      r1,|L1.116|
000066  71c8              STRB     r0,[r1,#7]
;;;192    	EE_SAVE_ACC_OFFSET();//保存数据				
000068  f7fffffe          BL       EE_SAVE_ACC_OFFSET
;;;193    }
00006c  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

                  |L1.112|
                          DCD      sensor
                  |L1.116|
                          DCD      flag

                          AREA ||i.Gyro_Caloffest||, CODE, READONLY, ALIGN=2

                  Gyro_Caloffest PROC
;;;86     /*====================================================================================================*/
;;;87     void Gyro_Caloffest(float x,float y,float z,u16 amount)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;88     {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
;;;89        sensor.gyro.quiet.x = x/amount;
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       __aeabi_ui2f
000012  4681              MOV      r9,r0
000014  4649              MOV      r1,r9
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       __aeabi_fdiv
00001c  4680              MOV      r8,r0
00001e  f7fffffe          BL       __aeabi_f2iz
000022  b201              SXTH     r1,r0
000024  4811              LDR      r0,|L2.108|
000026  f8a01054          STRH     r1,[r0,#0x54]
;;;90     	 sensor.gyro.quiet.y = y/amount;
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       __aeabi_ui2f
000030  4681              MOV      r9,r0
000032  4649              MOV      r1,r9
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       __aeabi_fdiv
00003a  4680              MOV      r8,r0
00003c  f7fffffe          BL       __aeabi_f2iz
000040  b201              SXTH     r1,r0
000042  480a              LDR      r0,|L2.108|
000044  f8a01056          STRH     r1,[r0,#0x56]
;;;91     	 sensor.gyro.quiet.z = z/amount;
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       __aeabi_ui2f
00004e  4681              MOV      r9,r0
000050  4649              MOV      r1,r9
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       __aeabi_fdiv
000058  4680              MOV      r8,r0
00005a  f7fffffe          BL       __aeabi_f2iz
00005e  b201              SXTH     r1,r0
000060  4802              LDR      r0,|L2.108|
000062  f8a01058          STRH     r1,[r0,#0x58]
;;;92     }
000066  e8bd87f0          POP      {r4-r10,pc}
;;;93     
                          ENDP

00006a  0000              DCW      0x0000
                  |L2.108|
                          DCD      sensor

                          AREA ||i.Gyro_OFFSET||, CODE, READONLY, ALIGN=2

                  Gyro_OFFSET PROC
;;;102    /*====================================================================================================*/
;;;103    void Gyro_OFFSET(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;104    {
000004  b085              SUB      sp,sp,#0x14
;;;105    	static u8 over_flag=0;
;;;106    	u8  i,cnt_g = 0;
000006  f04f0800          MOV      r8,#0
;;;107    
;;;108      int16_t gx_last=0,gy_last=0,gz_last=0;
00000a  2500              MOVS     r5,#0
00000c  2600              MOVS     r6,#0
00000e  2700              MOVS     r7,#0
;;;109    	int16_t Integral[3] = {0,0,0};
000010  2000              MOVS     r0,#0
000012  9003              STR      r0,[sp,#0xc]
000014  9004              STR      r0,[sp,#0x10]
;;;110    	int32_t tempg[3]={0,0,0};
000016  9000              STR      r0,[sp,#0]
000018  9001              STR      r0,[sp,#4]
00001a  9002              STR      r0,[sp,#8]
;;;111      over_flag=0;//因为定义的是static，如果不自己赋值，下次进来时over_flag就不会被赋值0了，保持为上一次校准完时赋值的1
00001c  496d              LDR      r1,|L3.468|
00001e  7008              STRB     r0,[r1,#0]
;;;112    	
;;;113    	OLED_Fill(0x00); //清屏
000020  f7fffffe          BL       OLED_Fill
;;;114    	OLED_Print(30,0,"请将飞行器");
000024  a26c              ADR      r2,|L3.472|
000026  2100              MOVS     r1,#0
000028  201e              MOVS     r0,#0x1e
00002a  f7fffffe          BL       OLED_Print
;;;115    	OLED_Print(24,2,"置于水平状态");
00002e  a26d              ADR      r2,|L3.484|
000030  2102              MOVS     r1,#2
000032  2018              MOVS     r0,#0x18
000034  f7fffffe          BL       OLED_Print
;;;116    	OLED_Print(30,4,"且保持静止");
000038  a26e              ADR      r2,|L3.500|
00003a  2104              MOVS     r1,#4
00003c  201e              MOVS     r0,#0x1e
00003e  f7fffffe          BL       OLED_Print
;;;117    	delay_ms(1500);
000042  f24050dc          MOV      r0,#0x5dc
000046  f7fffffe          BL       delay_ms
;;;118    	delay_ms(1500);
00004a  f24050dc          MOV      r0,#0x5dc
00004e  f7fffffe          BL       delay_ms
;;;119    	
;;;120    	while(!over_flag)	//此循环是确保四轴处于完全静止状态
000052  e0ac              B        |L3.430|
                  |L3.84|
;;;121    	{
;;;122    		if(cnt_g < 200)
000054  f1b80fc8          CMP      r8,#0xc8
000058  da73              BGE      |L3.322|
;;;123    		{
;;;124    			MPU6050_Read();
00005a  f7fffffe          BL       MPU6050_Read
;;;125    			sensor.gyro.origin.x = ((((int16_t)mpu6050_buffer[8]) << 8) | mpu6050_buffer[9]);
00005e  4868              LDR      r0,|L3.512|
000060  7a40              LDRB     r0,[r0,#9]  ; mpu6050_buffer
000062  4967              LDR      r1,|L3.512|
000064  7a09              LDRB     r1,[r1,#8]  ; mpu6050_buffer
000066  ea402001          ORR      r0,r0,r1,LSL #8
00006a  b200              SXTH     r0,r0
00006c  4965              LDR      r1,|L3.516|
00006e  8688              STRH     r0,[r1,#0x34]
;;;126    			sensor.gyro.origin.y = ((((int16_t)mpu6050_buffer[10]) << 8)| mpu6050_buffer[11]);
000070  4863              LDR      r0,|L3.512|
000072  7ac0              LDRB     r0,[r0,#0xb]  ; mpu6050_buffer
000074  4962              LDR      r1,|L3.512|
000076  7a89              LDRB     r1,[r1,#0xa]  ; mpu6050_buffer
000078  ea402001          ORR      r0,r0,r1,LSL #8
00007c  b201              SXTH     r1,r0
00007e  4861              LDR      r0,|L3.516|
000080  86c1              STRH     r1,[r0,#0x36]
;;;127    			sensor.gyro.origin.z = ((((int16_t)mpu6050_buffer[12]) << 8)| mpu6050_buffer[13]);
000082  485f              LDR      r0,|L3.512|
000084  7b40              LDRB     r0,[r0,#0xd]  ; mpu6050_buffer
000086  495e              LDR      r1,|L3.512|
000088  7b09              LDRB     r1,[r1,#0xc]  ; mpu6050_buffer
00008a  ea402001          ORR      r0,r0,r1,LSL #8
00008e  b201              SXTH     r1,r0
000090  485c              LDR      r0,|L3.516|
000092  8701              STRH     r1,[r0,#0x38]
;;;128    
;;;129    			tempg[0] += sensor.gyro.origin.x;
000094  495b              LDR      r1,|L3.516|
000096  f9b11034          LDRSH    r1,[r1,#0x34]  ; sensor
00009a  9800              LDR      r0,[sp,#0]
00009c  4408              ADD      r0,r0,r1
00009e  9000              STR      r0,[sp,#0]
;;;130    			tempg[1] += sensor.gyro.origin.y;
0000a0  4858              LDR      r0,|L3.516|
0000a2  f9b00036          LDRSH    r0,[r0,#0x36]
0000a6  9901              LDR      r1,[sp,#4]
0000a8  4408              ADD      r0,r0,r1
0000aa  9001              STR      r0,[sp,#4]
;;;131    			tempg[2] += sensor.gyro.origin.z;
0000ac  4855              LDR      r0,|L3.516|
0000ae  f9b00038          LDRSH    r0,[r0,#0x38]
0000b2  9902              LDR      r1,[sp,#8]
0000b4  4408              ADD      r0,r0,r1
0000b6  9002              STR      r0,[sp,#8]
;;;132    
;;;133    			Integral[0] += absu16(gx_last - sensor.gyro.origin.x);
0000b8  f9bd100c          LDRSH    r1,[sp,#0xc]
0000bc  4851              LDR      r0,|L3.516|
0000be  f9b00034          LDRSH    r0,[r0,#0x34]  ; sensor
0000c2  1a28              SUBS     r0,r5,r0
0000c4  d504              BPL      |L3.208|
0000c6  484f              LDR      r0,|L3.516|
0000c8  f9b00034          LDRSH    r0,[r0,#0x34]  ; sensor
0000cc  1b40              SUBS     r0,r0,r5
0000ce  e003              B        |L3.216|
                  |L3.208|
0000d0  484c              LDR      r0,|L3.516|
0000d2  f9b00034          LDRSH    r0,[r0,#0x34]  ; sensor
0000d6  1a28              SUBS     r0,r5,r0
                  |L3.216|
0000d8  4408              ADD      r0,r0,r1
0000da  b200              SXTH     r0,r0
0000dc  f8ad000c          STRH     r0,[sp,#0xc]
;;;134    			Integral[1] += absu16(gy_last - sensor.gyro.origin.y);
0000e0  f9bd100e          LDRSH    r1,[sp,#0xe]
0000e4  4847              LDR      r0,|L3.516|
0000e6  f9b00036          LDRSH    r0,[r0,#0x36]
0000ea  1a30              SUBS     r0,r6,r0
0000ec  d504              BPL      |L3.248|
0000ee  4845              LDR      r0,|L3.516|
0000f0  f9b00036          LDRSH    r0,[r0,#0x36]
0000f4  1b80              SUBS     r0,r0,r6
0000f6  e003              B        |L3.256|
                  |L3.248|
0000f8  4842              LDR      r0,|L3.516|
0000fa  f9b00036          LDRSH    r0,[r0,#0x36]
0000fe  1a30              SUBS     r0,r6,r0
                  |L3.256|
000100  4408              ADD      r0,r0,r1
000102  b200              SXTH     r0,r0
000104  f8ad000e          STRH     r0,[sp,#0xe]
;;;135    			Integral[2] += absu16(gz_last - sensor.gyro.origin.z);
000108  f9bd1010          LDRSH    r1,[sp,#0x10]
00010c  483d              LDR      r0,|L3.516|
00010e  f9b00038          LDRSH    r0,[r0,#0x38]
000112  1a38              SUBS     r0,r7,r0
000114  d504              BPL      |L3.288|
000116  483b              LDR      r0,|L3.516|
000118  f9b00038          LDRSH    r0,[r0,#0x38]
00011c  1bc0              SUBS     r0,r0,r7
00011e  e003              B        |L3.296|
                  |L3.288|
000120  4838              LDR      r0,|L3.516|
000122  f9b00038          LDRSH    r0,[r0,#0x38]
000126  1a38              SUBS     r0,r7,r0
                  |L3.296|
000128  4408              ADD      r0,r0,r1
00012a  b200              SXTH     r0,r0
00012c  f8ad0010          STRH     r0,[sp,#0x10]
;;;136    
;;;137    			gx_last = sensor.gyro.origin.x;
000130  4834              LDR      r0,|L3.516|
000132  f9b05034          LDRSH    r5,[r0,#0x34]  ; sensor
;;;138    			gy_last = sensor.gyro.origin.y;
000136  f9b06036          LDRSH    r6,[r0,#0x36]
;;;139    			gz_last = sensor.gyro.origin.z;
00013a  f9b07038          LDRSH    r7,[r0,#0x38]
00013e  e032              B        |L3.422|
000140  e7ff              B        |L3.322|
                  |L3.322|
;;;140    		}
;;;141    		else{
;;;142    			// 未校准成功
;;;143    			if(Integral[0]>=GYRO_GATHER || Integral[1]>=GYRO_GATHER || Integral[2]>= GYRO_GATHER){
000142  f9bd000c          LDRSH    r0,[sp,#0xc]
000146  281e              CMP      r0,#0x1e
000148  da07              BGE      |L3.346|
00014a  f9bd000e          LDRSH    r0,[sp,#0xe]
00014e  281e              CMP      r0,#0x1e
000150  da03              BGE      |L3.346|
000152  f9bd0010          LDRSH    r0,[sp,#0x10]
000156  281e              CMP      r0,#0x1e
000158  db0e              BLT      |L3.376|
                  |L3.346|
;;;144    				cnt_g = 0;
00015a  f04f0800          MOV      r8,#0
;;;145    				for(i=0;i<3;i++){
00015e  2400              MOVS     r4,#0
000160  e007              B        |L3.370|
                  |L3.354|
;;;146    					tempg[i]=Integral[i]=0;
000162  2000              MOVS     r0,#0
000164  a903              ADD      r1,sp,#0xc
000166  f8210014          STRH     r0,[r1,r4,LSL #1]
00016a  f84d0024          STR      r0,[sp,r4,LSL #2]
00016e  1c60              ADDS     r0,r4,#1              ;145
000170  b2c4              UXTB     r4,r0                 ;145
                  |L3.370|
000172  2c03              CMP      r4,#3                 ;145
000174  dbf5              BLT      |L3.354|
000176  e016              B        |L3.422|
                  |L3.376|
;;;147    				}
;;;148    			}
;;;149    			// 校准成功 
;;;150    			else{				
;;;151    				   Gyro_Caloffest(tempg[0],tempg[1],tempg[2],200);
000178  9802              LDR      r0,[sp,#8]
00017a  f7fffffe          BL       __aeabi_i2f
00017e  4681              MOV      r9,r0
000180  9801              LDR      r0,[sp,#4]
000182  f7fffffe          BL       __aeabi_i2f
000186  4682              MOV      r10,r0
000188  9800              LDR      r0,[sp,#0]
00018a  f7fffffe          BL       __aeabi_i2f
00018e  4683              MOV      r11,r0
000190  23c8              MOVS     r3,#0xc8
000192  464a              MOV      r2,r9
000194  4651              MOV      r1,r10
000196  f7fffffe          BL       Gyro_Caloffest
;;;152    				   over_flag = 1;
00019a  2001              MOVS     r0,#1
00019c  490d              LDR      r1,|L3.468|
00019e  7008              STRB     r0,[r1,#0]
;;;153    				   flag.calibratingG = 0;//成功后清楚校准标记
0001a0  2000              MOVS     r0,#0
0001a2  4919              LDR      r1,|L3.520|
0001a4  7288              STRB     r0,[r1,#0xa]
                  |L3.422|
;;;154    			}
;;;155    		}
;;;156    		cnt_g++;
0001a6  f1080001          ADD      r0,r8,#1
0001aa  f00008ff          AND      r8,r0,#0xff
                  |L3.430|
0001ae  4809              LDR      r0,|L3.468|
0001b0  7800              LDRB     r0,[r0,#0]            ;120  ; over_flag
0001b2  2800              CMP      r0,#0                 ;120
0001b4  f43faf4e          BEQ      |L3.84|
;;;157    	}
;;;158    	if(flag.calibratingA)
0001b8  4813              LDR      r0,|L3.520|
0001ba  79c0              LDRB     r0,[r0,#7]  ; flag
0001bc  b108              CBZ      r0,|L3.450|
;;;159    	  Accl_OFFSET();
0001be  f7fffffe          BL       Accl_OFFSET
                  |L3.450|
;;;160    	OLED_Fill(0x00); //清屏
0001c2  2000              MOVS     r0,#0
0001c4  f7fffffe          BL       OLED_Fill
;;;161    	OLED_Display();  //OLED显示初始化
0001c8  f7fffffe          BL       OLED_Display
;;;162    }
0001cc  b005              ADD      sp,sp,#0x14
0001ce  e8bd8ff0          POP      {r4-r11,pc}
;;;163    
                          ENDP

0001d2  0000              DCW      0x0000
                  |L3.468|
                          DCD      over_flag
                  |L3.472|
0001d8  c7ebbdab          DCB      199,235,189,171,183,201,208,208,198,247,0
0001dc  b7c9d0d0
0001e0  c6f700  
0001e3  00                DCB      0
                  |L3.484|
0001e4  d6c3d3da          DCB      214,195,211,218,203,174,198,189,215,180,204,172,0
0001e8  cbaec6bd
0001ec  d7b4ccac
0001f0  00      
0001f1  00                DCB      0
0001f2  00                DCB      0
0001f3  00                DCB      0
                  |L3.500|
0001f4  c7d2b1a3          DCB      199,210,177,163,179,214,190,178,214,185,0
0001f8  b3d6beb2
0001fc  d6b900  
0001ff  00                DCB      0
                  |L3.512|
                          DCD      mpu6050_buffer
                  |L3.516|
                          DCD      sensor
                  |L3.520|
                          DCD      flag

                          AREA ||i.InitMPU6050||, CODE, READONLY, ALIGN=1

                  InitMPU6050 PROC
;;;24     /*====================================================================================================*/
;;;25     u8 InitMPU6050(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     	u8 ack;
;;;28     	
;;;29     	ack = Single_Read(MPU6050_ADDRESS, WHO_AM_I);
000002  2175              MOVS     r1,#0x75
000004  20d0              MOVS     r0,#0xd0
000006  f7fffffe          BL       Single_Read
00000a  4604              MOV      r4,r0
;;;30     	if (!ack)
00000c  b90c              CBNZ     r4,|L4.18|
;;;31          return FALSE;
00000e  2000              MOVS     r0,#0
                  |L4.16|
;;;32     	
;;;33     	Single_Write(MPU6050_ADDRESS, PWR_MGMT_1, 0x00);  	//解除休眠状态
;;;34     	Single_Write(MPU6050_ADDRESS, SMPLRT_DIV, 0x07);     
;;;35     	Single_Write(MPU6050_ADDRESS, CONFIGL, MPU6050_DLPF);              //低通滤波
;;;36     	Single_Write(MPU6050_ADDRESS, GYRO_CONFIG, MPU6050_GYRO_FS_1000);  //陀螺仪量程 +-1000
;;;37     	Single_Write(MPU6050_ADDRESS, ACCEL_CONFIG, MPU6050_ACCEL_FS_4);   //加速度量程 +-4G
;;;38     	return TRUE;
;;;39     }
000010  bd10              POP      {r4,pc}
                  |L4.18|
000012  2200              MOVS     r2,#0                 ;33
000014  216b              MOVS     r1,#0x6b              ;33
000016  20d0              MOVS     r0,#0xd0              ;33
000018  f7fffffe          BL       Single_Write
00001c  2207              MOVS     r2,#7                 ;34
00001e  2119              MOVS     r1,#0x19              ;34
000020  20d0              MOVS     r0,#0xd0              ;34
000022  f7fffffe          BL       Single_Write
000026  2203              MOVS     r2,#3                 ;35
000028  211a              MOVS     r1,#0x1a              ;35
00002a  20d0              MOVS     r0,#0xd0              ;35
00002c  f7fffffe          BL       Single_Write
000030  2210              MOVS     r2,#0x10              ;36
000032  211b              MOVS     r1,#0x1b              ;36
000034  20d0              MOVS     r0,#0xd0              ;36
000036  f7fffffe          BL       Single_Write
00003a  2209              MOVS     r2,#9                 ;37
00003c  211c              MOVS     r1,#0x1c              ;37
00003e  20d0              MOVS     r0,#0xd0              ;37
000040  f7fffffe          BL       Single_Write
000044  2001              MOVS     r0,#1                 ;38
000046  e7e3              B        |L4.16|
;;;40     
                          ENDP


                          AREA ||i.MPU6050_Dataanl||, CODE, READONLY, ALIGN=2

                  MPU6050_Dataanl PROC
;;;61     *******************************************************************************/
;;;62     void MPU6050_Dataanl(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	MPU6050_Read();
000002  f7fffffe          BL       MPU6050_Read
;;;65     	
;;;66     	sensor.acc.origin.x = ((((int16_t)mpu6050_buffer[0]) << 8) | mpu6050_buffer[1]) - sensor.acc.quiet.x;
000006  482e              LDR      r0,|L5.192|
000008  7840              LDRB     r0,[r0,#1]  ; mpu6050_buffer
00000a  492d              LDR      r1,|L5.192|
00000c  7809              LDRB     r1,[r1,#0]  ; mpu6050_buffer
00000e  ea402001          ORR      r0,r0,r1,LSL #8
000012  492c              LDR      r1,|L5.196|
000014  8c09              LDRH     r1,[r1,#0x20]  ; sensor
000016  1a40              SUBS     r0,r0,r1
000018  b200              SXTH     r0,r0
00001a  492a              LDR      r1,|L5.196|
00001c  8008              STRH     r0,[r1,#0]
;;;67     	sensor.acc.origin.y = ((((int16_t)mpu6050_buffer[2]) << 8) | mpu6050_buffer[3]) - sensor.acc.quiet.y;
00001e  4828              LDR      r0,|L5.192|
000020  78c0              LDRB     r0,[r0,#3]  ; mpu6050_buffer
000022  4927              LDR      r1,|L5.192|
000024  7889              LDRB     r1,[r1,#2]  ; mpu6050_buffer
000026  ea402101          ORR      r1,r0,r1,LSL #8
00002a  4826              LDR      r0,|L5.196|
00002c  8c40              LDRH     r0,[r0,#0x22]
00002e  1a08              SUBS     r0,r1,r0
000030  b200              SXTH     r0,r0
000032  4924              LDR      r1,|L5.196|
000034  8048              STRH     r0,[r1,#2]
;;;68     	sensor.acc.origin.z = ((((int16_t)mpu6050_buffer[4]) << 8) | mpu6050_buffer[5]);
000036  4822              LDR      r0,|L5.192|
000038  7940              LDRB     r0,[r0,#5]  ; mpu6050_buffer
00003a  4921              LDR      r1,|L5.192|
00003c  7909              LDRB     r1,[r1,#4]  ; mpu6050_buffer
00003e  ea402001          ORR      r0,r0,r1,LSL #8
000042  b200              SXTH     r0,r0
000044  491f              LDR      r1,|L5.196|
000046  8088              STRH     r0,[r1,#4]
;;;69     
;;;70     	sensor.gyro.origin.x = ((((int16_t)mpu6050_buffer[8]) << 8) | mpu6050_buffer[9]);
000048  481d              LDR      r0,|L5.192|
00004a  7a40              LDRB     r0,[r0,#9]  ; mpu6050_buffer
00004c  491c              LDR      r1,|L5.192|
00004e  7a09              LDRB     r1,[r1,#8]  ; mpu6050_buffer
000050  ea402001          ORR      r0,r0,r1,LSL #8
000054  b200              SXTH     r0,r0
000056  491b              LDR      r1,|L5.196|
000058  8688              STRH     r0,[r1,#0x34]
;;;71     	sensor.gyro.origin.y = ((((int16_t)mpu6050_buffer[10]) << 8)| mpu6050_buffer[11]);
00005a  4819              LDR      r0,|L5.192|
00005c  7ac0              LDRB     r0,[r0,#0xb]  ; mpu6050_buffer
00005e  4918              LDR      r1,|L5.192|
000060  7a89              LDRB     r1,[r1,#0xa]  ; mpu6050_buffer
000062  ea402001          ORR      r0,r0,r1,LSL #8
000066  b201              SXTH     r1,r0
000068  4816              LDR      r0,|L5.196|
00006a  86c1              STRH     r1,[r0,#0x36]
;;;72     	sensor.gyro.origin.z = ((((int16_t)mpu6050_buffer[12]) << 8)| mpu6050_buffer[13]);
00006c  4814              LDR      r0,|L5.192|
00006e  7b40              LDRB     r0,[r0,#0xd]  ; mpu6050_buffer
000070  4913              LDR      r1,|L5.192|
000072  7b09              LDRB     r1,[r1,#0xc]  ; mpu6050_buffer
000074  ea402001          ORR      r0,r0,r1,LSL #8
000078  b201              SXTH     r1,r0
00007a  4812              LDR      r0,|L5.196|
00007c  8701              STRH     r1,[r0,#0x38]
;;;73       
;;;74     	sensor.gyro.radian.x = sensor.gyro.origin.x - sensor.gyro.quiet.x;
00007e  4601              MOV      r1,r0
000080  f9b12034          LDRSH    r2,[r1,#0x34]  ; sensor
000084  f9b11054          LDRSH    r1,[r1,#0x54]
000088  1a50              SUBS     r0,r2,r1
00008a  f7fffffe          BL       __aeabi_i2f
00008e  490d              LDR      r1,|L5.196|
000090  65c8              STR      r0,[r1,#0x5c]
;;;75     	sensor.gyro.radian.y = sensor.gyro.origin.y - sensor.gyro.quiet.y;
000092  f9b12036          LDRSH    r2,[r1,#0x36]
000096  f9b11056          LDRSH    r1,[r1,#0x56]
00009a  1a50              SUBS     r0,r2,r1
00009c  f7fffffe          BL       __aeabi_i2f
0000a0  4601              MOV      r1,r0
0000a2  4808              LDR      r0,|L5.196|
0000a4  6601              STR      r1,[r0,#0x60]
;;;76     	sensor.gyro.radian.z = sensor.gyro.origin.z - sensor.gyro.quiet.z;	 
0000a6  4601              MOV      r1,r0
0000a8  f9b12038          LDRSH    r2,[r1,#0x38]
0000ac  f9b11058          LDRSH    r1,[r1,#0x58]
0000b0  1a50              SUBS     r0,r2,r1
0000b2  f7fffffe          BL       __aeabi_i2f
0000b6  4601              MOV      r1,r0
0000b8  4802              LDR      r0,|L5.196|
0000ba  6641              STR      r1,[r0,#0x64]
;;;77     }
0000bc  bd10              POP      {r4,pc}
;;;78     /*====================================================================================================*/
                          ENDP

0000be  0000              DCW      0x0000
                  |L5.192|
                          DCD      mpu6050_buffer
                  |L5.196|
                          DCD      sensor

                          AREA ||i.MPU6050_Read||, CODE, READONLY, ALIGN=2

                  MPU6050_Read PROC
;;;43     //******************************************************************************
;;;44     void MPU6050_Read(void)
000000  b510              PUSH     {r4,lr}
;;;45     {
;;;46     	mpu6050_buffer[0]=Single_Read(MPU6050_ADDRESS, 0x3B);
000002  213b              MOVS     r1,#0x3b
000004  20d0              MOVS     r0,#0xd0
000006  f7fffffe          BL       Single_Read
00000a  4922              LDR      r1,|L6.148|
00000c  7008              STRB     r0,[r1,#0]
;;;47     	mpu6050_buffer[1]=Single_Read(MPU6050_ADDRESS, 0x3C);
00000e  213c              MOVS     r1,#0x3c
000010  20d0              MOVS     r0,#0xd0
000012  f7fffffe          BL       Single_Read
000016  491f              LDR      r1,|L6.148|
000018  7048              STRB     r0,[r1,#1]
;;;48     	mpu6050_buffer[2]=Single_Read(MPU6050_ADDRESS, 0x3D);
00001a  213d              MOVS     r1,#0x3d
00001c  20d0              MOVS     r0,#0xd0
00001e  f7fffffe          BL       Single_Read
000022  491c              LDR      r1,|L6.148|
000024  7088              STRB     r0,[r1,#2]
;;;49     	mpu6050_buffer[3]=Single_Read(MPU6050_ADDRESS, 0x3E);
000026  213e              MOVS     r1,#0x3e
000028  20d0              MOVS     r0,#0xd0
00002a  f7fffffe          BL       Single_Read
00002e  4919              LDR      r1,|L6.148|
000030  70c8              STRB     r0,[r1,#3]
;;;50     	mpu6050_buffer[4]=Single_Read(MPU6050_ADDRESS, 0x3F);
000032  213f              MOVS     r1,#0x3f
000034  20d0              MOVS     r0,#0xd0
000036  f7fffffe          BL       Single_Read
00003a  4916              LDR      r1,|L6.148|
00003c  7108              STRB     r0,[r1,#4]
;;;51     	mpu6050_buffer[5]=Single_Read(MPU6050_ADDRESS, 0x40);
00003e  2140              MOVS     r1,#0x40
000040  20d0              MOVS     r0,#0xd0
000042  f7fffffe          BL       Single_Read
000046  4913              LDR      r1,|L6.148|
000048  7148              STRB     r0,[r1,#5]
;;;52     	mpu6050_buffer[8]=Single_Read(MPU6050_ADDRESS, 0x43);
00004a  2143              MOVS     r1,#0x43
00004c  20d0              MOVS     r0,#0xd0
00004e  f7fffffe          BL       Single_Read
000052  4910              LDR      r1,|L6.148|
000054  7208              STRB     r0,[r1,#8]
;;;53     	mpu6050_buffer[9]=Single_Read(MPU6050_ADDRESS, 0x44);
000056  2144              MOVS     r1,#0x44
000058  20d0              MOVS     r0,#0xd0
00005a  f7fffffe          BL       Single_Read
00005e  490d              LDR      r1,|L6.148|
000060  7248              STRB     r0,[r1,#9]
;;;54     	mpu6050_buffer[10]=Single_Read(MPU6050_ADDRESS, 0x45);
000062  2145              MOVS     r1,#0x45
000064  20d0              MOVS     r0,#0xd0
000066  f7fffffe          BL       Single_Read
00006a  490a              LDR      r1,|L6.148|
00006c  7288              STRB     r0,[r1,#0xa]
;;;55     	mpu6050_buffer[11]=Single_Read(MPU6050_ADDRESS, 0x46);
00006e  2146              MOVS     r1,#0x46
000070  20d0              MOVS     r0,#0xd0
000072  f7fffffe          BL       Single_Read
000076  4907              LDR      r1,|L6.148|
000078  72c8              STRB     r0,[r1,#0xb]
;;;56     	mpu6050_buffer[12]=Single_Read(MPU6050_ADDRESS, 0x47);
00007a  2147              MOVS     r1,#0x47
00007c  20d0              MOVS     r0,#0xd0
00007e  f7fffffe          BL       Single_Read
000082  4904              LDR      r1,|L6.148|
000084  7308              STRB     r0,[r1,#0xc]
;;;57     	mpu6050_buffer[13]=Single_Read(MPU6050_ADDRESS, 0x48);
000086  2148              MOVS     r1,#0x48
000088  20d0              MOVS     r0,#0xd0
00008a  f7fffffe          BL       Single_Read
00008e  4901              LDR      r1,|L6.148|
000090  7348              STRB     r0,[r1,#0xd]
;;;58     }
000092  bd10              POP      {r4,pc}
;;;59     /**************************实现函数********************************************
                          ENDP

                  |L6.148|
                          DCD      mpu6050_buffer

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  mpu6050_buffer
                          %        16
                  sensor
                          %        104

                          AREA ||.data||, DATA, ALIGN=0

                  over_flag
000000  00                DCB      0x00
