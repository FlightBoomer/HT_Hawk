; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\delay.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\delay.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\GPS -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Heigh -I..\..\User\Algorithm\ekf2 -IC:\__Electronic_Projects\STM32\HT_Hawk_0528_1\Project\MDK-ARM(uV5)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\delay.crf ..\..\User\Driver\Delay\delay.c]
                          THUMB

                          AREA ||i.delay||, CODE, READONLY, ALIGN=1

                  delay PROC
;;;74     
;;;75     void delay(u32 x)
000000  2100              MOVS     r1,#0
;;;76     {
;;;77         u32 i,j;
;;;78     	for(i=0;i<x;i++)
000002  e006              B        |L1.18|
                  |L1.4|
;;;79     	   for(j=0;j<500;j++);
000004  2200              MOVS     r2,#0
000006  e000              B        |L1.10|
                  |L1.8|
000008  1c52              ADDS     r2,r2,#1
                  |L1.10|
00000a  f5b27ffa          CMP      r2,#0x1f4
00000e  d3fb              BCC      |L1.8|
000010  1c49              ADDS     r1,r1,#1              ;78
                  |L1.18|
000012  4281              CMP      r1,r0                 ;78
000014  d3f6              BCC      |L1.4|
;;;80     }
000016  4770              BX       lr
;;;81     
                          ENDP


                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;22     *******************************************************************************/
;;;23     void delay_init(u8 SYSCLK)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;24     {
;;;25     	SysTick->CTRL&=0xfffffffb;//bit2清空,选择外部时钟  HCLK/8
000004  6909              LDR      r1,[r1,#0x10]
000006  f0210104          BIC      r1,r1,#4
00000a  f04f22e0          MOV      r2,#0xe000e000
00000e  6111              STR      r1,[r2,#0x10]
;;;26     	fac_us=SYSCLK/8;		    
000010  17c2              ASRS     r2,r0,#31
000012  eb007252          ADD      r2,r0,r2,LSR #29
000016  f3c202c7          UBFX     r2,r2,#3,#8
00001a  4b07              LDR      r3,|L2.56|
00001c  701a              STRB     r2,[r3,#0]
;;;27     	fac_ms=(u16)fac_us*1000;
00001e  4619              MOV      r1,r3
000020  7809              LDRB     r1,[r1,#0]  ; fac_us
000022  eb010241          ADD      r2,r1,r1,LSL #1
000026  ebc211c1          RSB      r1,r2,r1,LSL #7
00002a  f64f72ff          MOV      r2,#0xffff
00002e  ea0201c1          AND      r1,r2,r1,LSL #3
000032  4a02              LDR      r2,|L2.60|
000034  8011              STRH     r1,[r2,#0]
;;;28     }				
000036  4770              BX       lr
;;;29     				    
                          ENDP

                  |L2.56|
                          DCD      fac_us
                  |L2.60|
                          DCD      fac_ms

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;38     *******************************************************************************/
;;;39     void delay_ms(u16 nms)
000000  4601              MOV      r1,r0
;;;40     {	 		  	  
;;;41     	u32 temp;		   
;;;42     	SysTick->LOAD=(u32)nms*fac_ms;//时间加载(SysTick->LOAD为24bit)
000002  4a0d              LDR      r2,|L3.56|
000004  8812              LDRH     r2,[r2,#0]  ; fac_ms
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;43     	SysTick->VAL =0x00;           //清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;44     	SysTick->CTRL=0x01 ;          //开始倒数  
000012  2201              MOVS     r2,#1
000014  611a              STR      r2,[r3,#0x10]
;;;45     	do
000016  bf00              NOP      
                  |L3.24|
;;;46     	{
;;;47     		temp=SysTick->CTRL;
000018  f04f22e0          MOV      r2,#0xe000e000
00001c  6910              LDR      r0,[r2,#0x10]
;;;48     	}
;;;49     	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001e  f0000201          AND      r2,r0,#1
000022  b11a              CBZ      r2,|L3.44|
000024  f4003280          AND      r2,r0,#0x10000
000028  2a00              CMP      r2,#0
00002a  d0f5              BEQ      |L3.24|
                  |L3.44|
;;;50     	SysTick->CTRL=0x00;       //关闭计数器
00002c  2200              MOVS     r2,#0
00002e  f04f23e0          MOV      r3,#0xe000e000
000032  611a              STR      r2,[r3,#0x10]
;;;51     	SysTick->VAL =0X00;       //清空计数器	  	    
000034  619a              STR      r2,[r3,#0x18]
;;;52     }   
000036  4770              BX       lr
;;;53     
                          ENDP

                  |L3.56|
                          DCD      fac_ms

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;59     *******************************************************************************/		    								   
;;;60     void delay_us(u32 nus)
000000  4601              MOV      r1,r0
;;;61     {		
;;;62     	u32 temp;	    	 
;;;63     	SysTick->LOAD=nus*fac_us; //时间加载	  		 
000002  4a0d              LDR      r2,|L4.56|
000004  7812              LDRB     r2,[r2,#0]  ; fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;64     	SysTick->VAL=0x00;        //清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;65     	SysTick->CTRL=0x01 ;      //开始倒数 	 
000012  2201              MOVS     r2,#1
000014  611a              STR      r2,[r3,#0x10]
;;;66     	do
000016  bf00              NOP      
                  |L4.24|
;;;67     	{
;;;68     		temp=SysTick->CTRL;
000018  f04f22e0          MOV      r2,#0xe000e000
00001c  6910              LDR      r0,[r2,#0x10]
;;;69     	}
;;;70     	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001e  f0000201          AND      r2,r0,#1
000022  b11a              CBZ      r2,|L4.44|
000024  f4003280          AND      r2,r0,#0x10000
000028  2a00              CMP      r2,#0
00002a  d0f5              BEQ      |L4.24|
                  |L4.44|
;;;71     	SysTick->CTRL=0x00;       //关闭计数器
00002c  2200              MOVS     r2,#0
00002e  f04f23e0          MOV      r3,#0xe000e000
000032  611a              STR      r2,[r3,#0x10]
;;;72     	SysTick->VAL =0X00;       //清空计数器	 
000034  619a              STR      r2,[r3,#0x18]
;;;73     }
000036  4770              BX       lr
;;;74     
                          ENDP

                  |L4.56|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
